=begin
#Swaggy Jenkins

#Jenkins API clients generated from Swagger / Open API specification

OpenAPI spec version: 0.1.0
Contact: blah@cliffano.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggyJenkinsClient::BlueOceanApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BlueOceanApi' do
  before do
    # run before each test
    @instance = SwaggyJenkinsClient::BlueOceanApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BlueOceanApi' do
    it 'should create an instact of BlueOceanApi' do
      expect(@instance).to be_instance_of(SwaggyJenkinsClient::BlueOceanApi)
    end
  end

  # unit tests for get_authenticated_user
  # 
  # Retrieve authenticated user details for an organisation
  # @param organisation Name of the organisation
  # @param [Hash] opts the optional parameters
  # @return [SwaggyjenkinsUser]
  describe 'get_authenticated_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_classes
  # 
  # Get a list of class names supported by a given class
  # @param _class Name of the class
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'get_classes test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organisation
  # 
  # Retrieve organisation details
  # @param organisation Name of the organisation
  # @param [Hash] opts the optional parameters
  # @return [SwaggyjenkinsOrganisation]
  describe 'get_organisation test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_organisations
  # 
  # Retrieve all organisations details
  # @param [Hash] opts the optional parameters
  # @return [GetOrganisations]
  describe 'get_organisations test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_branch_by_org
  # 
  # Retrieve branch details for an organisation pipeline
  # @param organisation Name of the organisation
  # @param pipeline Name of the pipeline
  # @param branch Name of the branch
  # @param [Hash] opts the optional parameters
  # @return [IojenkinsblueoceanrestimplpipelineBranchImpl]
  describe 'get_pipeline_branch_by_org test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_branches_by_org
  # 
  # Retrieve all branches details for an organisation pipeline
  # @param organisation Name of the organisation
  # @param pipeline Name of the pipeline
  # @param [Hash] opts the optional parameters
  # @return [GetMultibranchPipeline]
  describe 'get_pipeline_branches_by_org test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_by_org
  # 
  # Retrieve pipeline details for an organisation
  # @param organisation Name of the organisation
  # @param pipeline Name of the pipeline
  # @param [Hash] opts the optional parameters
  # @return [SwaggyjenkinsPipeline]
  describe 'get_pipeline_by_org test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_folder_by_org
  # 
  # Retrieve pipeline folder for an organisation
  # @param organisation Name of the organisation
  # @param folder Name of the folder
  # @param [Hash] opts the optional parameters
  # @return [IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl]
  describe 'get_pipeline_folder_by_org test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipeline_folder_by_org_0
  # 
  # Retrieve pipeline details for an organisation folder
  # @param organisation Name of the organisation
  # @param pipeline Name of the pipeline
  # @param folder Name of the folder
  # @param [Hash] opts the optional parameters
  # @return [IojenkinsblueoceanserviceembeddedrestPipelineImpl]
  describe 'get_pipeline_folder_by_org_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pipelines_by_org
  # 
  # Retrieve all pipelines details for an organisation
  # @param organisation Name of the organisation
  # @param [Hash] opts the optional parameters
  # @return [GetPipelines]
  describe 'get_pipelines_by_org test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_user
  # 
  # Retrieve user details for an organisation
  # @param organisation Name of the organisation
  # @param user Name of the user
  # @param [Hash] opts the optional parameters
  # @return [SwaggyjenkinsUser]
  describe 'get_user test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_users
  # 
  # Retrieve users details for an organisation
  # @param organisation Name of the organisation
  # @param [Hash] opts the optional parameters
  # @return [SwaggyjenkinsUser]
  describe 'get_users test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search
  # 
  # Get classes details
  # @param q Query string containing an array of class names
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'search test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for search_0
  # 
  # Search for any resource details
  # @param q Query string
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'search_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
