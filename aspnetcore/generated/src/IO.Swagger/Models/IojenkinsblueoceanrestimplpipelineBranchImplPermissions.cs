/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{

    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class IojenkinsblueoceanrestimplpipelineBranchImplPermissions :  IEquatable<IojenkinsblueoceanrestimplpipelineBranchImplPermissions>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="IojenkinsblueoceanrestimplpipelineBranchImplPermissions" /> class.
        /// </summary>
        /// <param name="Create">Create.</param>
        /// <param name="Read">Read.</param>
        /// <param name="Start">Start.</param>
        /// <param name="Stop">Stop.</param>
        /// <param name="Class">Class.</param>
        public IojenkinsblueoceanrestimplpipelineBranchImplPermissions(bool? Create = default(bool?), bool? Read = default(bool?), bool? Start = default(bool?), bool? Stop = default(bool?), string Class = default(string))
        {
            this.Create = Create;
            this.Read = Read;
            this.Start = Start;
            this.Stop = Stop;
            this.Class = Class;
            
        }

        /// <summary>
        /// Gets or Sets Create
        /// </summary>
        [DataMember(Name="create")]
        public bool? Create { get; set; }
        /// <summary>
        /// Gets or Sets Read
        /// </summary>
        [DataMember(Name="read")]
        public bool? Read { get; set; }
        /// <summary>
        /// Gets or Sets Start
        /// </summary>
        [DataMember(Name="start")]
        public bool? Start { get; set; }
        /// <summary>
        /// Gets or Sets Stop
        /// </summary>
        [DataMember(Name="stop")]
        public bool? Stop { get; set; }
        /// <summary>
        /// Gets or Sets Class
        /// </summary>
        [DataMember(Name="_class")]
        public string Class { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IojenkinsblueoceanrestimplpipelineBranchImplPermissions {\n");
            sb.Append("  Create: ").Append(Create).Append("\n");
            sb.Append("  Read: ").Append(Read).Append("\n");
            sb.Append("  Start: ").Append(Start).Append("\n");
            sb.Append("  Stop: ").Append(Stop).Append("\n");
            sb.Append("  Class: ").Append(Class).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((IojenkinsblueoceanrestimplpipelineBranchImplPermissions)obj);
        }

        /// <summary>
        /// Returns true if IojenkinsblueoceanrestimplpipelineBranchImplPermissions instances are equal
        /// </summary>
        /// <param name="other">Instance of IojenkinsblueoceanrestimplpipelineBranchImplPermissions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IojenkinsblueoceanrestimplpipelineBranchImplPermissions other)
        {

            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    this.Create == other.Create ||
                    this.Create != null &&
                    this.Create.Equals(other.Create)
                ) && 
                (
                    this.Read == other.Read ||
                    this.Read != null &&
                    this.Read.Equals(other.Read)
                ) && 
                (
                    this.Start == other.Start ||
                    this.Start != null &&
                    this.Start.Equals(other.Start)
                ) && 
                (
                    this.Stop == other.Stop ||
                    this.Stop != null &&
                    this.Stop.Equals(other.Stop)
                ) && 
                (
                    this.Class == other.Class ||
                    this.Class != null &&
                    this.Class.Equals(other.Class)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                    if (this.Create != null)
                    hash = hash * 59 + this.Create.GetHashCode();
                    if (this.Read != null)
                    hash = hash * 59 + this.Read.GetHashCode();
                    if (this.Start != null)
                    hash = hash * 59 + this.Start.GetHashCode();
                    if (this.Stop != null)
                    hash = hash * 59 + this.Stop.GetHashCode();
                    if (this.Class != null)
                    hash = hash * 59 + this.Class.GetHashCode();
                return hash;
            }
        }

        #region Operators

        public static bool operator ==(IojenkinsblueoceanrestimplpipelineBranchImplPermissions left, IojenkinsblueoceanrestimplpipelineBranchImplPermissions right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(IojenkinsblueoceanrestimplpipelineBranchImplPermissions left, IojenkinsblueoceanrestimplpipelineBranchImplPermissions right)
        {
            return !Equals(left, right);
        }

        #endregion Operators

    }
}
