/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class RemoteAccessApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve computer details</remarks>
        /// <response code="200">Successfully retrieved computer details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//computer/api/json/depth=1")]
        [SwaggerOperation("GetComputer")]
        [SwaggerResponse(200, type: typeof(HudsonmodelComputerSet))]
        public virtual IActionResult GetComputer()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonmodelComputerSet>(exampleJson)
            : default(HudsonmodelComputerSet);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve CSRF protection token</remarks>
        /// <response code="200">Successfully retrieved CSRF protection token</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//crumbIssuer/api/json")]
        [SwaggerOperation("GetCrumb")]
        [SwaggerResponse(200, type: typeof(HudsonsecuritycsrfDefaultCrumbIssuer))]
        public virtual IActionResult GetCrumb()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonsecuritycsrfDefaultCrumbIssuer>(exampleJson)
            : default(HudsonsecuritycsrfDefaultCrumbIssuer);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve Jenkins details</remarks>
        /// <response code="200">Successfully retrieved Jenkins details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//api/json")]
        [SwaggerOperation("GetJenkins")]
        [SwaggerResponse(200, type: typeof(HudsonmodelHudson))]
        public virtual IActionResult GetJenkins()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonmodelHudson>(exampleJson)
            : default(HudsonmodelHudson);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve job details</remarks>
        /// <param name="name">Name of the job</param>
        /// <response code="200">Successfully retrieved job details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//job/{name}/api/json")]
        [SwaggerOperation("GetJob")]
        [SwaggerResponse(200, type: typeof(HudsonmodelFreeStyleProject))]
        public virtual IActionResult GetJob([FromRoute]string name)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonmodelFreeStyleProject>(exampleJson)
            : default(HudsonmodelFreeStyleProject);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve job configuration</remarks>
        /// <param name="name">Name of the job</param>
        /// <response code="200">Successfully retrieved job configuration in config.xml format</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//job/{name}/config.xml")]
        [SwaggerOperation("GetJobConfig")]
        [SwaggerResponse(200, type: typeof(string))]
        public virtual IActionResult GetJobConfig([FromRoute]string name)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve job&#39;s last build details</remarks>
        /// <param name="name">Name of the job</param>
        /// <response code="200">Successfully retrieved job&#39;s last build details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//job/{name}/lastBuild/api/json")]
        [SwaggerOperation("GetJobLastBuild")]
        [SwaggerResponse(200, type: typeof(HudsonmodelFreeStyleBuild))]
        public virtual IActionResult GetJobLastBuild([FromRoute]string name)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonmodelFreeStyleBuild>(exampleJson)
            : default(HudsonmodelFreeStyleBuild);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve job&#39;s build progressive text output</remarks>
        /// <param name="name">Name of the job</param>
        /// <param name="number">Build number</param>
        /// <param name="start">Starting point of progressive text output</param>
        /// <response code="200">Successfully retrieved job&#39;s build progressive text output</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//job/{name}/{number}/logText/progressiveText")]
        [SwaggerOperation("GetJobProgressiveText")]
        public virtual void GetJobProgressiveText([FromRoute]string name, [FromRoute]string number, [FromQuery]string start)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve queue details</remarks>
        /// <response code="200">Successfully retrieved queue details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//queue/api/json")]
        [SwaggerOperation("GetQueue")]
        [SwaggerResponse(200, type: typeof(HudsonmodelQueue))]
        public virtual IActionResult GetQueue()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonmodelQueue>(exampleJson)
            : default(HudsonmodelQueue);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve queued item details</remarks>
        /// <param name="number">Queue number</param>
        /// <response code="200">Successfully retrieved queued item details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//queue/item/{number}/api/json")]
        [SwaggerOperation("GetQueueItem")]
        [SwaggerResponse(200, type: typeof(HudsonmodelQueue))]
        public virtual IActionResult GetQueueItem([FromRoute]string number)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonmodelQueue>(exampleJson)
            : default(HudsonmodelQueue);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve view details</remarks>
        /// <param name="name">Name of the view</param>
        /// <response code="200">Successfully retrieved view details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">View cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//view/{name}/api/json")]
        [SwaggerOperation("GetView")]
        [SwaggerResponse(200, type: typeof(HudsonmodelListView))]
        public virtual IActionResult GetView([FromRoute]string name)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<HudsonmodelListView>(exampleJson)
            : default(HudsonmodelListView);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve view configuration</remarks>
        /// <param name="name">Name of the view</param>
        /// <response code="200">Successfully retrieved view configuration in config.xml format</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">View cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//view/{name}/config.xml")]
        [SwaggerOperation("GetViewConfig")]
        [SwaggerResponse(200, type: typeof(string))]
        public virtual IActionResult GetViewConfig([FromRoute]string name)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve Jenkins headers</remarks>
        /// <response code="200">Successfully retrieved Jenkins headers</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpHead]
        [Route("//api/json")]
        [SwaggerOperation("HeadJenkins")]
        public virtual void HeadJenkins()
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Create a new job using job configuration, or copied from an existing job</remarks>
        /// <param name="name">Name of the new job</param>
        /// <param name="from">Existing job to copy from</param>
        /// <param name="mode">Set to &#39;copy&#39; for copying an existing job</param>
        /// <param name="body">Job configuration in config.xml format</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <param name="contentType">Content type header application/xml</param>
        /// <response code="200">Successfully created a new job</response>
        /// <response code="400">An error has occurred - error message is embedded inside the HTML response</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpPost]
        [Route("//createItem")]
        [SwaggerOperation("PostCreateItem")]
        public virtual void PostCreateItem([FromQuery]string name, [FromQuery]string from, [FromQuery]string mode, [FromBody]string body, [FromHeader]string jenkinsCrumb, [FromHeader]string contentType)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Create a new view using view configuration</remarks>
        /// <param name="name">Name of the new view</param>
        /// <param name="body">View configuration in config.xml format</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <param name="contentType">Content type header application/xml</param>
        /// <response code="200">Successfully created the view</response>
        /// <response code="400">An error has occurred - error message is embedded inside the HTML response</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpPost]
        [Route("//createView")]
        [SwaggerOperation("PostCreateView")]
        public virtual void PostCreateView([FromQuery]string name, [FromBody]string body, [FromHeader]string jenkinsCrumb, [FromHeader]string contentType)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Build a job</remarks>
        /// <param name="name">Name of the job</param>
        /// <param name="json"></param>
        /// <param name="token"></param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <response code="200">Successfully built the job (backward compatibility for older versions of Jenkins)</response>
        /// <response code="201">Successfully built the job</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpPost]
        [Route("//job/{name}/build")]
        [SwaggerOperation("PostJobBuild")]
        public virtual void PostJobBuild([FromRoute]string name, [FromQuery]string json, [FromQuery]string token, [FromHeader]string jenkinsCrumb)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Update job configuration</remarks>
        /// <param name="name">Name of the job</param>
        /// <param name="body">Job configuration in config.xml format</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <response code="200">Successfully retrieved job configuration in config.xml format</response>
        /// <response code="400">An error has occurred - error message is embedded inside the HTML response</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpPost]
        [Route("//job/{name}/config.xml")]
        [SwaggerOperation("PostJobConfig")]
        public virtual void PostJobConfig([FromRoute]string name, [FromBody]string body, [FromHeader]string jenkinsCrumb)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Delete a job</remarks>
        /// <param name="name">Name of the job</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <response code="200">Successfully deleted the job</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpPost]
        [Route("//job/{name}/doDelete")]
        [SwaggerOperation("PostJobDelete")]
        public virtual void PostJobDelete([FromRoute]string name, [FromHeader]string jenkinsCrumb)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Disable a job</remarks>
        /// <param name="name">Name of the job</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <response code="200">Successfully disabled the job</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpPost]
        [Route("//job/{name}/disable")]
        [SwaggerOperation("PostJobDisable")]
        public virtual void PostJobDisable([FromRoute]string name, [FromHeader]string jenkinsCrumb)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Enable a job</remarks>
        /// <param name="name">Name of the job</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <response code="200">Successfully enabled the job</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpPost]
        [Route("//job/{name}/enable")]
        [SwaggerOperation("PostJobEnable")]
        public virtual void PostJobEnable([FromRoute]string name, [FromHeader]string jenkinsCrumb)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Stop a job</remarks>
        /// <param name="name">Name of the job</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <response code="200">Successfully stopped the job</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Job cannot be found on Jenkins instance</response>
        [HttpPost]
        [Route("//job/{name}/lastBuild/stop")]
        [SwaggerOperation("PostJobLastBuildStop")]
        public virtual void PostJobLastBuildStop([FromRoute]string name, [FromHeader]string jenkinsCrumb)
        { 
            throw new NotImplementedException();
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Update view configuration</remarks>
        /// <param name="name">Name of the view</param>
        /// <param name="body">View configuration in config.xml format</param>
        /// <param name="jenkinsCrumb">CSRF protection token</param>
        /// <response code="200">Successfully updated view configuration</response>
        /// <response code="400">An error has occurred - error message is embedded inside the HTML response</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">View cannot be found on Jenkins instance</response>
        [HttpPost]
        [Route("//view/{name}/config.xml")]
        [SwaggerOperation("PostViewConfig")]
        public virtual void PostViewConfig([FromRoute]string name, [FromBody]string body, [FromHeader]string jenkinsCrumb)
        { 
            throw new NotImplementedException();
        }
    }
}
