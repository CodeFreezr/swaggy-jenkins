# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.hudsonmodel_hudson_master_computer import HudsonmodelHudsonMasterComputer
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class HudsonmodelComputerSet(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, _class: str=None, busy_executors: int=None, computer: List[HudsonmodelHudsonMasterComputer]=None, display_name: str=None, total_executors: int=None):
        """
        HudsonmodelComputerSet - a model defined in Swagger

        :param _class: The _class of this HudsonmodelComputerSet.
        :type _class: str
        :param busy_executors: The busy_executors of this HudsonmodelComputerSet.
        :type busy_executors: int
        :param computer: The computer of this HudsonmodelComputerSet.
        :type computer: List[HudsonmodelHudsonMasterComputer]
        :param display_name: The display_name of this HudsonmodelComputerSet.
        :type display_name: str
        :param total_executors: The total_executors of this HudsonmodelComputerSet.
        :type total_executors: int
        """
        self.swagger_types = {
            '_class': str,
            'busy_executors': int,
            'computer': List[HudsonmodelHudsonMasterComputer],
            'display_name': str,
            'total_executors': int
        }

        self.attribute_map = {
            '_class': '_class',
            'busy_executors': 'busyExecutors',
            'computer': 'computer',
            'display_name': 'displayName',
            'total_executors': 'totalExecutors'
        }

        self.__class = _class
        self._busy_executors = busy_executors
        self._computer = computer
        self._display_name = display_name
        self._total_executors = total_executors

    @classmethod
    def from_dict(cls, dikt) -> 'HudsonmodelComputerSet':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The hudsonmodelComputerSet of this HudsonmodelComputerSet.
        :rtype: HudsonmodelComputerSet
        """
        return deserialize_model(dikt, cls)

    @property
    def _class(self) -> str:
        """
        Gets the _class of this HudsonmodelComputerSet.

        :return: The _class of this HudsonmodelComputerSet.
        :rtype: str
        """
        return self.__class

    @_class.setter
    def _class(self, _class: str):
        """
        Sets the _class of this HudsonmodelComputerSet.

        :param _class: The _class of this HudsonmodelComputerSet.
        :type _class: str
        """

        self.__class = _class

    @property
    def busy_executors(self) -> int:
        """
        Gets the busy_executors of this HudsonmodelComputerSet.

        :return: The busy_executors of this HudsonmodelComputerSet.
        :rtype: int
        """
        return self._busy_executors

    @busy_executors.setter
    def busy_executors(self, busy_executors: int):
        """
        Sets the busy_executors of this HudsonmodelComputerSet.

        :param busy_executors: The busy_executors of this HudsonmodelComputerSet.
        :type busy_executors: int
        """

        self._busy_executors = busy_executors

    @property
    def computer(self) -> List[HudsonmodelHudsonMasterComputer]:
        """
        Gets the computer of this HudsonmodelComputerSet.

        :return: The computer of this HudsonmodelComputerSet.
        :rtype: List[HudsonmodelHudsonMasterComputer]
        """
        return self._computer

    @computer.setter
    def computer(self, computer: List[HudsonmodelHudsonMasterComputer]):
        """
        Sets the computer of this HudsonmodelComputerSet.

        :param computer: The computer of this HudsonmodelComputerSet.
        :type computer: List[HudsonmodelHudsonMasterComputer]
        """

        self._computer = computer

    @property
    def display_name(self) -> str:
        """
        Gets the display_name of this HudsonmodelComputerSet.

        :return: The display_name of this HudsonmodelComputerSet.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name: str):
        """
        Sets the display_name of this HudsonmodelComputerSet.

        :param display_name: The display_name of this HudsonmodelComputerSet.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def total_executors(self) -> int:
        """
        Gets the total_executors of this HudsonmodelComputerSet.

        :return: The total_executors of this HudsonmodelComputerSet.
        :rtype: int
        """
        return self._total_executors

    @total_executors.setter
    def total_executors(self, total_executors: int):
        """
        Sets the total_executors of this HudsonmodelComputerSet.

        :param total_executors: The total_executors of this HudsonmodelComputerSet.
        :type total_executors: int
        """

        self._total_executors = total_executors

