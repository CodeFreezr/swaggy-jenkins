/* 
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;

namespace IO.Swagger.Model
{
    /// <summary>
    /// HudsonmodelComputerSet
    /// </summary>
    [DataContract]
    public partial class HudsonmodelComputerSet :  IEquatable<HudsonmodelComputerSet>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HudsonmodelComputerSet" /> class.
        /// </summary>
        /// <param name="_Class">_Class.</param>
        /// <param name="BusyExecutors">BusyExecutors.</param>
        /// <param name="Computer">Computer.</param>
        /// <param name="DisplayName">DisplayName.</param>
        /// <param name="TotalExecutors">TotalExecutors.</param>
        public HudsonmodelComputerSet(string _Class = default(string), int? BusyExecutors = default(int?), List<HudsonmodelHudsonMasterComputer> Computer = default(List<HudsonmodelHudsonMasterComputer>), string DisplayName = default(string), int? TotalExecutors = default(int?))
        {
            this._Class = _Class;
            this.BusyExecutors = BusyExecutors;
            this.Computer = Computer;
            this.DisplayName = DisplayName;
            this.TotalExecutors = TotalExecutors;
        }
        
        /// <summary>
        /// Gets or Sets _Class
        /// </summary>
        [DataMember(Name="_class", EmitDefaultValue=false)]
        public string _Class { get; set; }
        /// <summary>
        /// Gets or Sets BusyExecutors
        /// </summary>
        [DataMember(Name="busyExecutors", EmitDefaultValue=false)]
        public int? BusyExecutors { get; set; }
        /// <summary>
        /// Gets or Sets Computer
        /// </summary>
        [DataMember(Name="computer", EmitDefaultValue=false)]
        public List<HudsonmodelHudsonMasterComputer> Computer { get; set; }
        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name="displayName", EmitDefaultValue=false)]
        public string DisplayName { get; set; }
        /// <summary>
        /// Gets or Sets TotalExecutors
        /// </summary>
        [DataMember(Name="totalExecutors", EmitDefaultValue=false)]
        public int? TotalExecutors { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class HudsonmodelComputerSet {\n");
            sb.Append("  _Class: ").Append(_Class).Append("\n");
            sb.Append("  BusyExecutors: ").Append(BusyExecutors).Append("\n");
            sb.Append("  Computer: ").Append(Computer).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  TotalExecutors: ").Append(TotalExecutors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as HudsonmodelComputerSet);
        }

        /// <summary>
        /// Returns true if HudsonmodelComputerSet instances are equal
        /// </summary>
        /// <param name="other">Instance of HudsonmodelComputerSet to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(HudsonmodelComputerSet other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this._Class == other._Class ||
                    this._Class != null &&
                    this._Class.Equals(other._Class)
                ) && 
                (
                    this.BusyExecutors == other.BusyExecutors ||
                    this.BusyExecutors != null &&
                    this.BusyExecutors.Equals(other.BusyExecutors)
                ) && 
                (
                    this.Computer == other.Computer ||
                    this.Computer != null &&
                    this.Computer.SequenceEqual(other.Computer)
                ) && 
                (
                    this.DisplayName == other.DisplayName ||
                    this.DisplayName != null &&
                    this.DisplayName.Equals(other.DisplayName)
                ) && 
                (
                    this.TotalExecutors == other.TotalExecutors ||
                    this.TotalExecutors != null &&
                    this.TotalExecutors.Equals(other.TotalExecutors)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this._Class != null)
                    hash = hash * 59 + this._Class.GetHashCode();
                if (this.BusyExecutors != null)
                    hash = hash * 59 + this.BusyExecutors.GetHashCode();
                if (this.Computer != null)
                    hash = hash * 59 + this.Computer.GetHashCode();
                if (this.DisplayName != null)
                    hash = hash * 59 + this.DisplayName.GetHashCode();
                if (this.TotalExecutors != null)
                    hash = hash * 59 + this.TotalExecutors.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
