/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions(QString* json) {
    init();
    this->fromJson(*json);
}

SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions() {
    init();
}

SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::~SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions() {
    this->cleanup();
}

void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::init() {
    create = false;
    read = false;
    start = false;
    stop = false;
    _class = new QString("");
}

void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::cleanup() {
    




    if(_class != nullptr) {
        delete _class;
    }
}

SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&create, pJson["create"], "bool", "");
    ::Swagger::setValue(&read, pJson["read"], "bool", "");
    ::Swagger::setValue(&start, pJson["start"], "bool", "");
    ::Swagger::setValue(&stop, pJson["stop"], "bool", "");
    ::Swagger::setValue(&_class, pJson["_class"], "QString", "QString");
}

QString
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    obj->insert("create", QJsonValue(create));

    obj->insert("read", QJsonValue(read));

    obj->insert("start", QJsonValue(start));

    obj->insert("stop", QJsonValue(stop));

    toJsonValue(QString("_class"), _class, obj, QString("QString"));

    return obj;
}

bool
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::getCreate() {
    return create;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::setCreate(bool create) {
    this->create = create;
}

bool
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::getRead() {
    return read;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::setRead(bool read) {
    this->read = read;
}

bool
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::getStart() {
    return start;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::setStart(bool start) {
    this->start = start;
}

bool
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::getStop() {
    return stop;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::setStop(bool stop) {
    this->stop = stop;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::getClass() {
    return _class;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions::setClass(QString* _class) {
    this->_class = _class;
}


}

