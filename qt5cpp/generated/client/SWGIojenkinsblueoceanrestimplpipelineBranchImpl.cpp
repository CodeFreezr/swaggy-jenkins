/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGIojenkinsblueoceanrestimplpipelineBranchImpl.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGIojenkinsblueoceanrestimplpipelineBranchImpl::SWGIojenkinsblueoceanrestimplpipelineBranchImpl(QString* json) {
    init();
    this->fromJson(*json);
}

SWGIojenkinsblueoceanrestimplpipelineBranchImpl::SWGIojenkinsblueoceanrestimplpipelineBranchImpl() {
    init();
}

SWGIojenkinsblueoceanrestimplpipelineBranchImpl::~SWGIojenkinsblueoceanrestimplpipelineBranchImpl() {
    this->cleanup();
}

void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::init() {
    _class = new QString("");
    display_name = new QString("");
    estimated_duration_in_millis = 0;
    full_display_name = new QString("");
    full_name = new QString("");
    name = new QString("");
    organization = new QString("");
    parameters = new QList<SWGHudsonmodelStringParameterDefinition*>();
    permissions = new SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions();
    weather_score = 0;
    pull_request = new QString("");
}

void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::cleanup() {
    
    if(_class != nullptr) {
        delete _class;
    }

    if(display_name != nullptr) {
        delete display_name;
    }


    if(full_display_name != nullptr) {
        delete full_display_name;
    }

    if(full_name != nullptr) {
        delete full_name;
    }

    if(name != nullptr) {
        delete name;
    }

    if(organization != nullptr) {
        delete organization;
    }

    if(parameters != nullptr) {
        QList<SWGHudsonmodelStringParameterDefinition*>* arr = parameters;
        foreach(SWGHudsonmodelStringParameterDefinition* o, *arr) {
            delete o;
        }
        delete parameters;
    }

    if(permissions != nullptr) {
        delete permissions;
    }


    if(pull_request != nullptr) {
        delete pull_request;
    }
}

SWGIojenkinsblueoceanrestimplpipelineBranchImpl*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&_class, pJson["_class"], "QString", "QString");
    ::Swagger::setValue(&display_name, pJson["displayName"], "QString", "QString");
    ::Swagger::setValue(&estimated_duration_in_millis, pJson["estimatedDurationInMillis"], "qint32", "");
    ::Swagger::setValue(&full_display_name, pJson["fullDisplayName"], "QString", "QString");
    ::Swagger::setValue(&full_name, pJson["fullName"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&organization, pJson["organization"], "QString", "QString");
    
    ::Swagger::setValue(&parameters, pJson["parameters"], "QList", "SWGHudsonmodelStringParameterDefinition");
    
    ::Swagger::setValue(&permissions, pJson["permissions"], "SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions", "SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions");
    ::Swagger::setValue(&weather_score, pJson["weatherScore"], "qint32", "");
    ::Swagger::setValue(&pull_request, pJson["pullRequest"], "QString", "QString");
}

QString
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("_class"), _class, obj, QString("QString"));

    toJsonValue(QString("displayName"), display_name, obj, QString("QString"));

    obj->insert("estimatedDurationInMillis", QJsonValue(estimated_duration_in_millis));

    toJsonValue(QString("fullDisplayName"), full_display_name, obj, QString("QString"));

    toJsonValue(QString("fullName"), full_name, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    toJsonValue(QString("organization"), organization, obj, QString("QString"));

    QJsonArray parametersJsonArray;
    toJsonArray((QList<void*>*)parameters, &parametersJsonArray, "parameters", "SWGHudsonmodelStringParameterDefinition");
    obj->insert("parameters", parametersJsonArray);

    toJsonValue(QString("permissions"), permissions, obj, QString("SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions"));

    obj->insert("weatherScore", QJsonValue(weather_score));

    toJsonValue(QString("pullRequest"), pull_request, obj, QString("QString"));

    return obj;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getClass() {
    return _class;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setClass(QString* _class) {
    this->_class = _class;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getDisplayName() {
    return display_name;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setDisplayName(QString* display_name) {
    this->display_name = display_name;
}

qint32
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getEstimatedDurationInMillis() {
    return estimated_duration_in_millis;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setEstimatedDurationInMillis(qint32 estimated_duration_in_millis) {
    this->estimated_duration_in_millis = estimated_duration_in_millis;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getFullDisplayName() {
    return full_display_name;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setFullDisplayName(QString* full_display_name) {
    this->full_display_name = full_display_name;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getFullName() {
    return full_name;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setFullName(QString* full_name) {
    this->full_name = full_name;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getName() {
    return name;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setName(QString* name) {
    this->name = name;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getOrganization() {
    return organization;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setOrganization(QString* organization) {
    this->organization = organization;
}

QList<SWGHudsonmodelStringParameterDefinition*>*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getParameters() {
    return parameters;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setParameters(QList<SWGHudsonmodelStringParameterDefinition*>* parameters) {
    this->parameters = parameters;
}

SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getPermissions() {
    return permissions;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setPermissions(SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions* permissions) {
    this->permissions = permissions;
}

qint32
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getWeatherScore() {
    return weather_score;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setWeatherScore(qint32 weather_score) {
    this->weather_score = weather_score;
}

QString*
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::getPullRequest() {
    return pull_request;
}
void
SWGIojenkinsblueoceanrestimplpipelineBranchImpl::setPullRequest(QString* pull_request) {
    this->pull_request = pull_request;
}


}

