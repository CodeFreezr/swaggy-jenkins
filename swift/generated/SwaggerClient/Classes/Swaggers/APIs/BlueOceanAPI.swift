//
// BlueOceanAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class BlueOceanAPI: APIBase {
    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAuthenticatedUser(organisation organisation: String, completion: ((data: SwaggyjenkinsUser?, error: ErrorType?) -> Void)) {
        getAuthenticatedUserWithRequestBuilder(organisation: organisation).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/user/
     - Retrieve authenticated user details for an organisation
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "fullName" : "aeiou",
  "_class" : "aeiou",
  "id" : "aeiou",
  "email" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 

     - returns: RequestBuilder<SwaggyjenkinsUser> 
     */
    public class func getAuthenticatedUserWithRequestBuilder(organisation organisation: String) -> RequestBuilder<SwaggyjenkinsUser> {
        var path = "/blue/rest/organizations/{organisation}/user/"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SwaggyjenkinsUser>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter _class: (path) Name of the class 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getClasses(_class _class: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        getClassesWithRequestBuilder(_class: _class).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/classes/{class}
     - Get a list of class names supported by a given class
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter _class: (path) Name of the class 

     - returns: RequestBuilder<String> 
     */
    public class func getClassesWithRequestBuilder(_class _class: String) -> RequestBuilder<String> {
        var path = "/blue/rest/classes/{class}"
        path = path.stringByReplacingOccurrencesOfString("{class}", withString: "\(_class)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOrganisation(organisation organisation: String, completion: ((data: SwaggyjenkinsOrganisation?, error: ErrorType?) -> Void)) {
        getOrganisationWithRequestBuilder(organisation: organisation).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}
     - Retrieve organisation details
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "_class" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 

     - returns: RequestBuilder<SwaggyjenkinsOrganisation> 
     */
    public class func getOrganisationWithRequestBuilder(organisation organisation: String) -> RequestBuilder<SwaggyjenkinsOrganisation> {
        var path = "/blue/rest/organizations/{organisation}"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SwaggyjenkinsOrganisation>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getOrganisations(completion: ((data: GetOrganisations?, error: ErrorType?) -> Void)) {
        getOrganisationsWithRequestBuilder().execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/
     - Retrieve all organisations details
     - examples: [{contentType=application/json, example=""}]

     - returns: RequestBuilder<GetOrganisations> 
     */
    public class func getOrganisationsWithRequestBuilder() -> RequestBuilder<GetOrganisations> {
        let path = "/blue/rest/organizations/"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetOrganisations>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 
     - parameter branch: (path) Name of the branch 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getPipelineBranchByOrg(organisation organisation: String, pipeline: String, branch: String, completion: ((data: IojenkinsblueoceanrestimplpipelineBranchImpl?, error: ErrorType?) -> Void)) {
        getPipelineBranchByOrgWithRequestBuilder(organisation: organisation, pipeline: pipeline, branch: branch).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches/{branch}/
     - Retrieve branch details for an organisation pipeline
     - examples: [{contentType=application/json, example={
  "weatherScore" : 6,
  "displayName" : "aeiou",
  "permissions" : {
    "read" : true,
    "stop" : true,
    "start" : true,
    "create" : true,
    "_class" : "aeiou"
  },
  "organization" : "aeiou",
  "estimatedDurationInMillis" : 0,
  "name" : "aeiou",
  "fullDisplayName" : "aeiou",
  "fullName" : "aeiou",
  "_class" : "aeiou",
  "parameters" : [ {
    "name" : "aeiou",
    "description" : "aeiou",
    "_class" : "aeiou",
    "type" : "aeiou",
    "defaultParameterValue" : {
      "name" : "aeiou",
      "_class" : "aeiou",
      "value" : "aeiou"
    }
  } ],
  "pullRequest" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 
     - parameter branch: (path) Name of the branch 

     - returns: RequestBuilder<IojenkinsblueoceanrestimplpipelineBranchImpl> 
     */
    public class func getPipelineBranchByOrgWithRequestBuilder(organisation organisation: String, pipeline: String, branch: String) -> RequestBuilder<IojenkinsblueoceanrestimplpipelineBranchImpl> {
        var path = "/blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches/{branch}/"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{pipeline}", withString: "\(pipeline)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{branch}", withString: "\(branch)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<IojenkinsblueoceanrestimplpipelineBranchImpl>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getPipelineBranchesByOrg(organisation organisation: String, pipeline: String, completion: ((data: GetMultibranchPipeline?, error: ErrorType?) -> Void)) {
        getPipelineBranchesByOrgWithRequestBuilder(organisation: organisation, pipeline: pipeline).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches
     - Retrieve all branches details for an organisation pipeline
     - examples: [{contentType=application/json, example={
  "weatherScore" : 6,
  "latestRun" : "aeiou",
  "displayName" : "aeiou",
  "totalNumberOfPullRequests" : 9,
  "numberOfFailingPullRequests" : 5,
  "branchNames" : [ "aeiou" ],
  "organization" : "aeiou",
  "totalNumberOfBranches" : 7,
  "estimatedDurationInMillis" : 0,
  "name" : "aeiou",
  "numberOfSuccessfulPullRequests" : 2,
  "numberOfSuccessfulBranches" : 5,
  "numberOfFailingBranches" : 1,
  "_class" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 

     - returns: RequestBuilder<GetMultibranchPipeline> 
     */
    public class func getPipelineBranchesByOrgWithRequestBuilder(organisation organisation: String, pipeline: String) -> RequestBuilder<GetMultibranchPipeline> {
        var path = "/blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{pipeline}", withString: "\(pipeline)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetMultibranchPipeline>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getPipelineByOrg(organisation organisation: String, pipeline: String, completion: ((data: SwaggyjenkinsPipeline?, error: ErrorType?) -> Void)) {
        getPipelineByOrgWithRequestBuilder(organisation: organisation, pipeline: pipeline).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/pipelines/{pipeline}
     - Retrieve pipeline details for an organisation
     - examples: [{contentType=application/json, example={
  "weatherScore" : 0,
  "latestRun" : {
    "runSummary" : "aeiou",
    "durationInMillis" : 5,
    "commitId" : "aeiou",
    "type" : "aeiou",
    "pipeline" : "aeiou",
    "result" : "aeiou",
    "organization" : "aeiou",
    "estimatedDurationInMillis" : 5,
    "enQueueTime" : "aeiou",
    "startTime" : "aeiou",
    "endTime" : "aeiou",
    "id" : "aeiou",
    "state" : "aeiou",
    "_class" : "aeiou",
    "artifacts" : [ {
      "size" : 1,
      "name" : "aeiou",
      "_class" : "aeiou",
      "url" : "aeiou"
    } ]
  },
  "displayName" : "aeiou",
  "organization" : "aeiou",
  "name" : "aeiou",
  "estimatedDurationInMillis" : 6,
  "fullName" : "aeiou",
  "_class" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 

     - returns: RequestBuilder<SwaggyjenkinsPipeline> 
     */
    public class func getPipelineByOrgWithRequestBuilder(organisation organisation: String, pipeline: String) -> RequestBuilder<SwaggyjenkinsPipeline> {
        var path = "/blue/rest/organizations/{organisation}/pipelines/{pipeline}"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{pipeline}", withString: "\(pipeline)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SwaggyjenkinsPipeline>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter folder: (path) Name of the folder 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getPipelineFolderByOrg(organisation organisation: String, folder: String, completion: ((data: IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl?, error: ErrorType?) -> Void)) {
        getPipelineFolderByOrgWithRequestBuilder(organisation: organisation, folder: folder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/pipelines/{folder}/
     - Retrieve pipeline folder for an organisation
     - examples: [{contentType=application/json, example={
  "numberOfPipelines" : 6,
  "displayName" : "aeiou",
  "numberOfFolders" : 0,
  "organization" : "aeiou",
  "name" : "aeiou",
  "fullName" : "aeiou",
  "_class" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 
     - parameter folder: (path) Name of the folder 

     - returns: RequestBuilder<IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl> 
     */
    public class func getPipelineFolderByOrgWithRequestBuilder(organisation organisation: String, folder: String) -> RequestBuilder<IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl> {
        var path = "/blue/rest/organizations/{organisation}/pipelines/{folder}/"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{folder}", withString: "\(folder)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 
     - parameter folder: (path) Name of the folder 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getPipelineFolderByOrg_0(organisation organisation: String, pipeline: String, folder: String, completion: ((data: IojenkinsblueoceanserviceembeddedrestPipelineImpl?, error: ErrorType?) -> Void)) {
        getPipelineFolderByOrg_0WithRequestBuilder(organisation: organisation, pipeline: pipeline, folder: folder).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/pipelines/{folder}/pipelines/{pipeline}
     - Retrieve pipeline details for an organisation folder
     - examples: [{contentType=application/json, example={
  "weatherScore" : 6,
  "latestRun" : "aeiou",
  "displayName" : "aeiou",
  "organization" : "aeiou",
  "estimatedDurationInMillis" : 0,
  "name" : "aeiou",
  "fullName" : "aeiou",
  "_class" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 
     - parameter pipeline: (path) Name of the pipeline 
     - parameter folder: (path) Name of the folder 

     - returns: RequestBuilder<IojenkinsblueoceanserviceembeddedrestPipelineImpl> 
     */
    public class func getPipelineFolderByOrg_0WithRequestBuilder(organisation organisation: String, pipeline: String, folder: String) -> RequestBuilder<IojenkinsblueoceanserviceembeddedrestPipelineImpl> {
        var path = "/blue/rest/organizations/{organisation}/pipelines/{folder}/pipelines/{pipeline}"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{pipeline}", withString: "\(pipeline)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{folder}", withString: "\(folder)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<IojenkinsblueoceanserviceembeddedrestPipelineImpl>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getPipelinesByOrg(organisation organisation: String, completion: ((data: GetPipelines?, error: ErrorType?) -> Void)) {
        getPipelinesByOrgWithRequestBuilder(organisation: organisation).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/pipelines/
     - Retrieve all pipelines details for an organisation
     - examples: [{contentType=application/json, example=""}]
     
     - parameter organisation: (path) Name of the organisation 

     - returns: RequestBuilder<GetPipelines> 
     */
    public class func getPipelinesByOrgWithRequestBuilder(organisation organisation: String) -> RequestBuilder<GetPipelines> {
        var path = "/blue/rest/organizations/{organisation}/pipelines/"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<GetPipelines>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter user: (path) Name of the user 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUser(organisation organisation: String, user: String, completion: ((data: SwaggyjenkinsUser?, error: ErrorType?) -> Void)) {
        getUserWithRequestBuilder(organisation: organisation, user: user).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/users/{user}
     - Retrieve user details for an organisation
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "fullName" : "aeiou",
  "_class" : "aeiou",
  "id" : "aeiou",
  "email" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 
     - parameter user: (path) Name of the user 

     - returns: RequestBuilder<SwaggyjenkinsUser> 
     */
    public class func getUserWithRequestBuilder(organisation organisation: String, user: String) -> RequestBuilder<SwaggyjenkinsUser> {
        var path = "/blue/rest/organizations/{organisation}/users/{user}"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        path = path.stringByReplacingOccurrencesOfString("{user}", withString: "\(user)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SwaggyjenkinsUser>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter organisation: (path) Name of the organisation 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getUsers(organisation organisation: String, completion: ((data: SwaggyjenkinsUser?, error: ErrorType?) -> Void)) {
        getUsersWithRequestBuilder(organisation: organisation).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/organizations/{organisation}/users/
     - Retrieve users details for an organisation
     - examples: [{contentType=application/json, example={
  "name" : "aeiou",
  "fullName" : "aeiou",
  "_class" : "aeiou",
  "id" : "aeiou",
  "email" : "aeiou"
}}]
     
     - parameter organisation: (path) Name of the organisation 

     - returns: RequestBuilder<SwaggyjenkinsUser> 
     */
    public class func getUsersWithRequestBuilder(organisation organisation: String) -> RequestBuilder<SwaggyjenkinsUser> {
        var path = "/blue/rest/organizations/{organisation}/users/"
        path = path.stringByReplacingOccurrencesOfString("{organisation}", withString: "\(organisation)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<SwaggyjenkinsUser>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter q: (query) Query string containing an array of class names 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func search(q q: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        searchWithRequestBuilder(q: q).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/classes/
     - Get classes details
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter q: (query) Query string containing an array of class names 

     - returns: RequestBuilder<String> 
     */
    public class func searchWithRequestBuilder(q q: String) -> RequestBuilder<String> {
        let path = "/blue/rest/classes/"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "q": q
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**

     - parameter q: (query) Query string 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func search_0(q q: String, completion: ((data: String?, error: ErrorType?) -> Void)) {
        search_0WithRequestBuilder(q: q).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /blue/rest/search/
     - Search for any resource details
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter q: (query) Query string 

     - returns: RequestBuilder<String> 
     */
    public class func search_0WithRequestBuilder(q q: String) -> RequestBuilder<String> {
        let path = "/blue/rest/search/"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "q": q
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
