/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator 2.3.0-SNAPSHOT.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "QueueItemImpl.h"

#include <string>
#include <sstream>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace io {
namespace swagger {
namespace server {
namespace model {

QueueItemImpl::QueueItemImpl()
{
    m__class = "";
    m_ExpectedBuildNumber = 0;
    m_Id = "";
    m_Pipeline = "";
    m_QueuedTime = 0;
    
}

QueueItemImpl::~QueueItemImpl()
{
}

std::string QueueItemImpl::toJsonString()
{
	std::stringstream ss;
	ptree pt;
	pt.put("_class", m__class);
	pt.put("ExpectedBuildNumber", m_ExpectedBuildNumber);
	pt.put("Id", m_Id);
	pt.put("Pipeline", m_Pipeline);
	pt.put("QueuedTime", m_QueuedTime);
	write_json(ss, pt, false);
	return ss.str();
}

void QueueItemImpl::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	m__class = pt.get("_class", "");
	m_ExpectedBuildNumber = pt.get("ExpectedBuildNumber", 0);
	m_Id = pt.get("Id", "");
	m_Pipeline = pt.get("Pipeline", "");
	m_QueuedTime = pt.get("QueuedTime", 0);
}

std::string QueueItemImpl::getClass() const
{
    return m__class;
}
void QueueItemImpl::setClass(std::string value)
{
    m__class = value;
}
int32_t QueueItemImpl::getExpectedBuildNumber() const
{
    return m_ExpectedBuildNumber;
}
void QueueItemImpl::setExpectedBuildNumber(int32_t value)
{
    m_ExpectedBuildNumber = value;
}
std::string QueueItemImpl::getId() const
{
    return m_Id;
}
void QueueItemImpl::setId(std::string value)
{
    m_Id = value;
}
std::string QueueItemImpl::getPipeline() const
{
    return m_Pipeline;
}
void QueueItemImpl::setPipeline(std::string value)
{
    m_Pipeline = value;
}
int32_t QueueItemImpl::getQueuedTime() const
{
    return m_QueuedTime;
}
void QueueItemImpl::setQueuedTime(int32_t value)
{
    m_QueuedTime = value;
}

}
}
}
}

