/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 0.1.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
/*
 * QueueLeftItem.h
 *
 * 
 */

#ifndef QueueLeftItem_H_
#define QueueLeftItem_H_


#include "ModelBase.h"

#include "FreeStyleBuild.h"
#include <string>
#include "CauseAction.h"
#include "FreeStyleProject.h"
#include <vector>

namespace io {
namespace swagger {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  QueueLeftItem
    : public ModelBase
{
public:
    QueueLeftItem();
    virtual ~QueueLeftItem();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// QueueLeftItem members

    /// <summary>
    /// 
    /// </summary>
    std::string getClass() const;
    void setClass(std::string value);
    bool classIsSet() const;
    void unset_class();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<CauseAction>>& getActions();
    bool actionsIsSet() const;
    void unsetActions();
    /// <summary>
    /// 
    /// </summary>
    bool getBlocked() const;
    void setBlocked(bool value);
    bool blockedIsSet() const;
    void unsetBlocked();
    /// <summary>
    /// 
    /// </summary>
    bool getBuildable() const;
    void setBuildable(bool value);
    bool buildableIsSet() const;
    void unsetBuildable();
    /// <summary>
    /// 
    /// </summary>
    int32_t getId() const;
    void setId(int32_t value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    int32_t getInQueueSince() const;
    void setInQueueSince(int32_t value);
    bool inQueueSinceIsSet() const;
    void unsetInQueueSince();
    /// <summary>
    /// 
    /// </summary>
    std::string getParams() const;
    void setParams(std::string value);
    bool paramsIsSet() const;
    void unsetParams();
    /// <summary>
    /// 
    /// </summary>
    bool getStuck() const;
    void setStuck(bool value);
    bool stuckIsSet() const;
    void unsetStuck();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<FreeStyleProject> getTask() const;
    void setTask(std::shared_ptr<FreeStyleProject> value);
    bool taskIsSet() const;
    void unsetTask();
    /// <summary>
    /// 
    /// </summary>
    std::string getUrl() const;
    void setUrl(std::string value);
    bool urlIsSet() const;
    void unsetUrl();
    /// <summary>
    /// 
    /// </summary>
    std::string getWhy() const;
    void setWhy(std::string value);
    bool whyIsSet() const;
    void unsetWhy();
    /// <summary>
    /// 
    /// </summary>
    bool getCancelled() const;
    void setCancelled(bool value);
    bool cancelledIsSet() const;
    void unsetCancelled();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<FreeStyleBuild> getExecutable() const;
    void setExecutable(std::shared_ptr<FreeStyleBuild> value);
    bool executableIsSet() const;
    void unsetExecutable();

protected:
    std::string m__class;
    bool m__classIsSet;
    std::vector<std::shared_ptr<CauseAction>> m_Actions;
    bool m_ActionsIsSet;
    bool m_Blocked;
    bool m_BlockedIsSet;
    bool m_Buildable;
    bool m_BuildableIsSet;
    int32_t m_Id;
    bool m_IdIsSet;
    int32_t m_InQueueSince;
    bool m_InQueueSinceIsSet;
    std::string m_Params;
    bool m_ParamsIsSet;
    bool m_Stuck;
    bool m_StuckIsSet;
    std::shared_ptr<FreeStyleProject> m_Task;
    bool m_TaskIsSet;
    std::string m_Url;
    bool m_UrlIsSet;
    std::string m_Why;
    bool m_WhyIsSet;
    bool m_Cancelled;
    bool m_CancelledIsSet;
    std::shared_ptr<FreeStyleBuild> m_Executable;
    bool m_ExecutableIsSet;
};

}
}
}
}

#endif /* QueueLeftItem_H_ */
