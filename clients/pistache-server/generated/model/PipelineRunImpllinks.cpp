/**
* Swaggy Jenkins
* Jenkins API clients generated from Swagger / Open API specification
*
* OpenAPI spec version: 0.1.0
* Contact: blah@cliffano.com
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "PipelineRunImpllinks.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

PipelineRunImpllinks::PipelineRunImpllinks()
{
    m_NodesIsSet = false;
    m_LogIsSet = false;
    m_SelfIsSet = false;
    m_ActionsIsSet = false;
    m_StepsIsSet = false;
    m__class = "";
    m__classIsSet = false;
    
}

PipelineRunImpllinks::~PipelineRunImpllinks()
{
}

void PipelineRunImpllinks::validate()
{
    // TODO: implement validation
}

nlohmann::json PipelineRunImpllinks::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_NodesIsSet)
    {
        val["nodes"] = ModelBase::toJson(m_Nodes);
    }
    if(m_LogIsSet)
    {
        val["log"] = ModelBase::toJson(m_Log);
    }
    if(m_SelfIsSet)
    {
        val["self"] = ModelBase::toJson(m_Self);
    }
    if(m_ActionsIsSet)
    {
        val["actions"] = ModelBase::toJson(m_Actions);
    }
    if(m_StepsIsSet)
    {
        val["steps"] = ModelBase::toJson(m_Steps);
    }
    if(m__classIsSet)
    {
        val["_class"] = ModelBase::toJson(m__class);
    }
    

    return val;
}

void PipelineRunImpllinks::fromJson(nlohmann::json& val)
{
    if(val.find("nodes") != val.end())
    {
        if(!val["nodes"].is_null())
        {
            std::shared_ptr<Link> newItem(new Link());
            newItem->fromJson(val["nodes"]);
            setNodes( newItem );
        }
        
    }
    if(val.find("log") != val.end())
    {
        if(!val["log"].is_null())
        {
            std::shared_ptr<Link> newItem(new Link());
            newItem->fromJson(val["log"]);
            setLog( newItem );
        }
        
    }
    if(val.find("self") != val.end())
    {
        if(!val["self"].is_null())
        {
            std::shared_ptr<Link> newItem(new Link());
            newItem->fromJson(val["self"]);
            setSelf( newItem );
        }
        
    }
    if(val.find("actions") != val.end())
    {
        if(!val["actions"].is_null())
        {
            std::shared_ptr<Link> newItem(new Link());
            newItem->fromJson(val["actions"]);
            setActions( newItem );
        }
        
    }
    if(val.find("steps") != val.end())
    {
        if(!val["steps"].is_null())
        {
            std::shared_ptr<Link> newItem(new Link());
            newItem->fromJson(val["steps"]);
            setSteps( newItem );
        }
        
    }
    if(val.find("_class") != val.end())
    {
        setClass(val.at("_class"));
        
    }
    
}


std::shared_ptr<Link> PipelineRunImpllinks::getNodes() const
{
    return m_Nodes;
}
void PipelineRunImpllinks::setNodes(std::shared_ptr<Link> value)
{
    m_Nodes = value;
    m_NodesIsSet = true;
}
bool PipelineRunImpllinks::nodesIsSet() const
{
    return m_NodesIsSet;
}
void PipelineRunImpllinks::unsetNodes()
{
    m_NodesIsSet = false;
}
std::shared_ptr<Link> PipelineRunImpllinks::getLog() const
{
    return m_Log;
}
void PipelineRunImpllinks::setLog(std::shared_ptr<Link> value)
{
    m_Log = value;
    m_LogIsSet = true;
}
bool PipelineRunImpllinks::logIsSet() const
{
    return m_LogIsSet;
}
void PipelineRunImpllinks::unsetLog()
{
    m_LogIsSet = false;
}
std::shared_ptr<Link> PipelineRunImpllinks::getSelf() const
{
    return m_Self;
}
void PipelineRunImpllinks::setSelf(std::shared_ptr<Link> value)
{
    m_Self = value;
    m_SelfIsSet = true;
}
bool PipelineRunImpllinks::selfIsSet() const
{
    return m_SelfIsSet;
}
void PipelineRunImpllinks::unsetSelf()
{
    m_SelfIsSet = false;
}
std::shared_ptr<Link> PipelineRunImpllinks::getActions() const
{
    return m_Actions;
}
void PipelineRunImpllinks::setActions(std::shared_ptr<Link> value)
{
    m_Actions = value;
    m_ActionsIsSet = true;
}
bool PipelineRunImpllinks::actionsIsSet() const
{
    return m_ActionsIsSet;
}
void PipelineRunImpllinks::unsetActions()
{
    m_ActionsIsSet = false;
}
std::shared_ptr<Link> PipelineRunImpllinks::getSteps() const
{
    return m_Steps;
}
void PipelineRunImpllinks::setSteps(std::shared_ptr<Link> value)
{
    m_Steps = value;
    m_StepsIsSet = true;
}
bool PipelineRunImpllinks::stepsIsSet() const
{
    return m_StepsIsSet;
}
void PipelineRunImpllinks::unsetSteps()
{
    m_StepsIsSet = false;
}
std::string PipelineRunImpllinks::getClass() const
{
    return m__class;
}
void PipelineRunImpllinks::setClass(std::string value)
{
    m__class = value;
    m__classIsSet = true;
}
bool PipelineRunImpllinks::classIsSet() const
{
    return m__classIsSet;
}
void PipelineRunImpllinks::unset_class()
{
    m__classIsSet = false;
}

}
}
}
}

