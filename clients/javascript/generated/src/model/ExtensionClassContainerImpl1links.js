/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Link from './Link';





/**
* The ExtensionClassContainerImpl1links model module.
* @module model/ExtensionClassContainerImpl1links
* @version 0.0.2
*/
export default class ExtensionClassContainerImpl1links {
    /**
    * Constructs a new <code>ExtensionClassContainerImpl1links</code>.
    * @alias module:model/ExtensionClassContainerImpl1links
    * @class
    */

    constructor() {
        

        
        

        

        
    }

    /**
    * Constructs a <code>ExtensionClassContainerImpl1links</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/ExtensionClassContainerImpl1links} obj Optional instance to populate.
    * @return {module:model/ExtensionClassContainerImpl1links} The populated <code>ExtensionClassContainerImpl1links</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExtensionClassContainerImpl1links();

            
            
            

            if (data.hasOwnProperty('self')) {
                obj['self'] = Link.constructFromObject(data['self']);
            }
            if (data.hasOwnProperty('_class')) {
                obj['_class'] = ApiClient.convertToType(data['_class'], 'String');
            }
        }
        return obj;
    }

    /**
    * @member {module:model/Link} self
    */
    self = undefined;
    /**
    * @member {String} _class
    */
    _class = undefined;








}


