/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggyJenkins);
  }
}(this, function(expect, SwaggyJenkins) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggyJenkins.Hudson();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Hudson', function() {
    it('should create an instance of Hudson', function() {
      // uncomment below and update the code to test Hudson
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be.a(SwaggyJenkins.Hudson);
    });

    it('should have the property _class (base name: "_class")', function() {
      // uncomment below and update the code to test the property _class
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property assignedLabels (base name: "assignedLabels")', function() {
      // uncomment below and update the code to test the property assignedLabels
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property mode (base name: "mode")', function() {
      // uncomment below and update the code to test the property mode
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property nodeDescription (base name: "nodeDescription")', function() {
      // uncomment below and update the code to test the property nodeDescription
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property nodeName (base name: "nodeName")', function() {
      // uncomment below and update the code to test the property nodeName
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property numExecutors (base name: "numExecutors")', function() {
      // uncomment below and update the code to test the property numExecutors
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property jobs (base name: "jobs")', function() {
      // uncomment below and update the code to test the property jobs
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property primaryView (base name: "primaryView")', function() {
      // uncomment below and update the code to test the property primaryView
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property quietingDown (base name: "quietingDown")', function() {
      // uncomment below and update the code to test the property quietingDown
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property slaveAgentPort (base name: "slaveAgentPort")', function() {
      // uncomment below and update the code to test the property slaveAgentPort
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property unlabeledLoad (base name: "unlabeledLoad")', function() {
      // uncomment below and update the code to test the property unlabeledLoad
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property useCrumbs (base name: "useCrumbs")', function() {
      // uncomment below and update the code to test the property useCrumbs
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property useSecurity (base name: "useSecurity")', function() {
      // uncomment below and update the code to test the property useSecurity
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

    it('should have the property views (base name: "views")', function() {
      // uncomment below and update the code to test the property views
      //var instane = new SwaggyJenkins.Hudson();
      //expect(instance).to.be();
    });

  });

}));
