<?php
/**
 * GithubContent
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Server\Model
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Server\Model;

use \ArrayAccess;

/**
 * Class representing the GithubContent model.
 *
 * @package Swagger\Server\Model
 * @author  Swagger Codegen team
 */
class GithubContent implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $_name = 'GithubContent';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var array[]
      */
    protected static $_attributes = [
        'name' => ['name', 'string', null, 'setName', 'getName'],
        'sha' => ['sha', 'string', null, 'setSha', 'getSha'],
        '_class' => ['_class', 'string', null, 'setClass', 'getClass'],
        'repo' => ['repo', 'string', null, 'setRepo', 'getRepo'],
        'size' => ['size', 'int', null, 'setSize', 'getSize'],
        'owner' => ['owner', 'string', null, 'setOwner', 'getOwner'],
        'path' => ['path', 'string', null, 'setPath', 'getPath'],
        'base64_data' => ['base64Data', 'string', null, 'setBase64Data', 'getBase64Data'],
    ];
    

    
    /**     * @var string|null
     */
    protected $name;

    /**     * @var string|null
     */
    protected $sha;

    /**     * @var string|null
     */
    protected $_class;

    /**     * @var string|null
     */
    protected $repo;

    /**     * @var int|null
     */
    protected $size;

    /**     * @var string|null
     */
    protected $owner;

    /**     * @var string|null
     */
    protected $path;

    /**     * @var string|null
     */
    protected $base64_data;

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->name = isset($data['name']) ? $data['name'] : null;
        $this->sha = isset($data['sha']) ? $data['sha'] : null;
        $this->_class = isset($data['_class']) ? $data['_class'] : null;
        $this->repo = isset($data['repo']) ? $data['repo'] : null;
        $this->size = isset($data['size']) ? $data['size'] : null;
        $this->owner = isset($data['owner']) ? $data['owner'] : null;
        $this->path = isset($data['path']) ? $data['path'] : null;
        $this->base64_data = isset($data['base64_data']) ? $data['base64_data'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function modelName() {
        return self::$_name;
    }

    /**
     * Array of property to mappings.
     *
     * @return array[]
     */
    public function modelAttributes() {
        
        return self::$_attributes;
    }

    /**
     * Validate all the properties in the model
     *
     * Return true if all passed.
     *
     * @return bool True if all properties are valid
     */
    public function isValid()
    {
        return true;
    }


    /**
     * Gets name.
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Sets name.
     *
     * @param string|null $name
     *
     * @return $this
     */
    public function setName($name = null)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Gets sha.
     *
     * @return string|null
     */
    public function getSha()
    {
        return $this->sha;
    }

    /**
     * Sets sha.
     *
     * @param string|null $sha
     *
     * @return $this
     */
    public function setSha($sha = null)
    {
        $this->sha = $sha;

        return $this;
    }

    /**
     * Gets _class.
     *
     * @return string|null
     */
    public function getClass()
    {
        return $this->_class;
    }

    /**
     * Sets _class.
     *
     * @param string|null $_class
     *
     * @return $this
     */
    public function setClass($_class = null)
    {
        $this->_class = $_class;

        return $this;
    }

    /**
     * Gets repo.
     *
     * @return string|null
     */
    public function getRepo()
    {
        return $this->repo;
    }

    /**
     * Sets repo.
     *
     * @param string|null $repo
     *
     * @return $this
     */
    public function setRepo($repo = null)
    {
        $this->repo = $repo;

        return $this;
    }

    /**
     * Gets size.
     *
     * @return int|null
     */
    public function getSize()
    {
        return $this->size;
    }

    /**
     * Sets size.
     *
     * @param int|null $size
     *
     * @return $this
     */
    public function setSize($size = null)
    {
        $this->size = $size;

        return $this;
    }

    /**
     * Gets owner.
     *
     * @return string|null
     */
    public function getOwner()
    {
        return $this->owner;
    }

    /**
     * Sets owner.
     *
     * @param string|null $owner
     *
     * @return $this
     */
    public function setOwner($owner = null)
    {
        $this->owner = $owner;

        return $this;
    }

    /**
     * Gets path.
     *
     * @return string|null
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * Sets path.
     *
     * @param string|null $path
     *
     * @return $this
     */
    public function setPath($path = null)
    {
        $this->path = $path;

        return $this;
    }

    /**
     * Gets base64_data.
     *
     * @return string|null
     */
    public function getBase64Data()
    {
        return $this->base64_data;
    }

    /**
     * Sets base64_data.
     *
     * @param string|null $base64_data
     *
     * @return $this
     */
    public function setBase64Data($base64_data = null)
    {
        $this->base64_data = $base64_data;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->$offset) ? $this->$offset : null;
    }

    /**
     * Sets value based on offset.
     * @param  string  $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        $this->$offset = null;
    }
}


