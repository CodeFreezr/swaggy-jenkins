/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

export interface AllView {
  class?: string;
  name?: string;
  url?: string;
}

export interface Body {
  favorite: boolean;
}

export interface BranchImpl {
  class?: string;
  displayName?: string;
  estimatedDurationInMillis?: number;
  fullDisplayName?: string;
  fullName?: string;
  name?: string;
  organization?: string;
  parameters?: Array<StringParameterDefinition>;
  permissions?: BranchImplpermissions;
  weatherScore?: number;
  pullRequest?: string;
  links?: BranchImpllinks;
  latestRun?: PipelineRunImpl;
}

export interface BranchImpllinks {
  self?: Link;
  actions?: Link;
  runs?: Link;
  queue?: Link;
  class?: string;
}

export interface BranchImplpermissions {
  create?: boolean;
  read?: boolean;
  start?: boolean;
  stop?: boolean;
  class?: string;
}

export interface CauseAction {
  class?: string;
  causes?: Array<CauseUserIdCause>;
}

export interface CauseUserIdCause {
  class?: string;
  shortDescription?: string;
  userId?: string;
  userName?: string;
}

export interface ClassesByClass {
  classes?: Array<string>;
  class?: string;
}

export interface ClockDifference {
  class?: string;
  diff?: number;
}

export interface ComputerSet {
  class?: string;
  busyExecutors?: number;
  computer?: Array<HudsonMasterComputer>;
  displayName?: string;
  totalExecutors?: number;
}

export interface DefaultCrumbIssuer {
  class?: string;
  crumb?: string;
  crumbRequestField?: string;
}

export interface DiskSpaceMonitorDescriptorDiskSpace {
  class?: string;
  timestamp?: number;
  path?: string;
  size?: number;
}

export interface EmptyChangeLogSet {
  class?: string;
  kind?: string;
}

export interface ExtensionClassContainerImpl1 {
  class?: string;
  links?: ExtensionClassContainerImpl1links;
  map?: ExtensionClassContainerImpl1map;
}

export interface ExtensionClassContainerImpl1links {
  self?: Link;
  class?: string;
}

export interface ExtensionClassContainerImpl1map {
  ioJenkinsBlueoceanServiceEmbeddedRestPipelineImpl?: ExtensionClassImpl;
  ioJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl?: ExtensionClassImpl;
  class?: string;
}

export interface ExtensionClassImpl {
  class?: string;
  links?: ExtensionClassImpllinks;
  classes?: Array<string>;
}

export interface ExtensionClassImpllinks {
  self?: Link;
  class?: string;
}

export interface FavoriteImpl {
  class?: string;
  links?: FavoriteImpllinks;
  item?: PipelineImpl;
}

export interface FavoriteImpllinks {
  self?: Link;
  class?: string;
}

export interface FreeStyleBuild {
  class?: string;
  number?: number;
  url?: string;
  actions?: Array<CauseAction>;
  building?: boolean;
  description?: string;
  displayName?: string;
  duration?: number;
  estimatedDuration?: number;
  executor?: string;
  fullDisplayName?: string;
  id?: string;
  keepLog?: boolean;
  queueId?: number;
  result?: string;
  timestamp?: number;
  builtOn?: string;
  changeSet?: EmptyChangeLogSet;
}

export interface FreeStyleProject {
  class?: string;
  name?: string;
  url?: string;
  color?: string;
  actions?: Array<FreeStyleProjectactions>;
  description?: string;
  displayName?: string;
  displayNameOrNull?: string;
  fullDisplayName?: string;
  fullName?: string;
  buildable?: boolean;
  builds?: Array<FreeStyleBuild>;
  firstBuild?: FreeStyleBuild;
  healthReport?: Array<FreeStyleProjecthealthReport>;
  inQueue?: boolean;
  keepDependencies?: boolean;
  lastBuild?: FreeStyleBuild;
  lastCompletedBuild?: FreeStyleBuild;
  lastFailedBuild?: string;
  lastStableBuild?: FreeStyleBuild;
  lastSuccessfulBuild?: FreeStyleBuild;
  lastUnstableBuild?: string;
  lastUnsuccessfulBuild?: string;
  nextBuildNumber?: number;
  queueItem?: string;
  concurrentBuild?: boolean;
  scm?: NullSCM;
}

export interface FreeStyleProjectactions {
  class?: string;
}

export interface FreeStyleProjecthealthReport {
  description?: string;
  iconClassName?: string;
  iconUrl?: string;
  score?: number;
  class?: string;
}

export interface GenericResource {
  class?: string;
  displayName?: string;
  durationInMillis?: number;
  id?: string;
  result?: string;
  startTime?: string;
}

export interface GithubContent {
  name?: string;
  sha?: string;
  class?: string;
  repo?: string;
  size?: number;
  owner?: string;
  path?: string;
  base64Data?: string;
}

export interface GithubFile {
  content?: GithubContent;
  class?: string;
}

export interface GithubOrganization {
  class?: string;
  links?: GithubOrganizationlinks;
  jenkinsOrganizationPipeline?: boolean;
  name?: string;
}

export interface GithubOrganizationlinks {
  repositories?: Link;
  self?: Link;
  class?: string;
}

export interface GithubRepositories {
  class?: string;
  links?: GithubRepositorieslinks;
  items?: Array<GithubRepository>;
  lastPage?: number;
  nextPage?: number;
  pageSize?: number;
}

export interface GithubRepositorieslinks {
  self?: Link;
  class?: string;
}

export interface GithubRepository {
  class?: string;
  links?: GithubRepositorylinks;
  defaultBranch?: string;
  description?: string;
  name?: string;
  permissions?: GithubRepositorypermissions;
  private?: boolean;
  fullName?: string;
}

export interface GithubRepositorylinks {
  self?: Link;
  class?: string;
}

export interface GithubRepositorypermissions {
  admin?: boolean;
  push?: boolean;
  pull?: boolean;
  class?: string;
}

export interface GithubRespositoryContainer {
  class?: string;
  links?: GithubRespositoryContainerlinks;
  repositories?: GithubRepositories;
}

export interface GithubRespositoryContainerlinks {
  self?: Link;
  class?: string;
}

export interface GithubScm {
  class?: string;
  links?: GithubScmlinks;
  credentialId?: string;
  id?: string;
  uri?: string;
}

export interface GithubScmlinks {
  self?: Link;
  class?: string;
}

export interface Hudson {
  class?: string;
  assignedLabels?: Array<HudsonassignedLabels>;
  mode?: string;
  nodeDescription?: string;
  nodeName?: string;
  numExecutors?: number;
  description?: string;
  jobs?: Array<FreeStyleProject>;
  primaryView?: AllView;
  quietingDown?: boolean;
  slaveAgentPort?: number;
  unlabeledLoad?: UnlabeledLoadStatistics;
  useCrumbs?: boolean;
  useSecurity?: boolean;
  views?: Array<AllView>;
}

export interface HudsonMasterComputer {
  class?: string;
  displayName?: string;
  executors?: Array<HudsonMasterComputerexecutors>;
  icon?: string;
  iconClassName?: string;
  idle?: boolean;
  jnlpAgent?: boolean;
  launchSupported?: boolean;
  loadStatistics?: Label1;
  manualLaunchAllowed?: boolean;
  monitorData?: HudsonMasterComputermonitorData;
  numExecutors?: number;
  offline?: boolean;
  offlineCause?: string;
  offlineCauseReason?: string;
  temporarilyOffline?: boolean;
}

export interface HudsonMasterComputerexecutors {
  currentExecutable?: FreeStyleBuild;
  idle?: boolean;
  likelyStuck?: boolean;
  number?: number;
  progress?: number;
  class?: string;
}

export interface HudsonMasterComputermonitorData {
  hudsonNodeMonitorsSwapSpaceMonitor?: SwapSpaceMonitorMemoryUsage2;
  hudsonNodeMonitorsTemporarySpaceMonitor?: DiskSpaceMonitorDescriptorDiskSpace;
  hudsonNodeMonitorsDiskSpaceMonitor?: DiskSpaceMonitorDescriptorDiskSpace;
  hudsonNodeMonitorsArchitectureMonitor?: string;
  hudsonNodeMonitorsResponseTimeMonitor?: ResponseTimeMonitorData;
  hudsonNodeMonitorsClockMonitor?: ClockDifference;
  class?: string;
}

export interface HudsonassignedLabels {
  class?: string;
}

export interface InputStepImpl {
  class?: string;
  links?: InputStepImpllinks;
  id?: string;
  message?: string;
  ok?: string;
  parameters?: Array<StringParameterDefinition>;
  submitter?: string;
}

export interface InputStepImpllinks {
  self?: Link;
  class?: string;
}

export interface Label1 {
  class?: string;
}

export interface Link {
  class?: string;
  href?: string;
}

export interface ListView {
  class?: string;
  description?: string;
  jobs?: Array<FreeStyleProject>;
  name?: string;
  url?: string;
}

export interface MultibranchPipeline {
  displayName?: string;
  estimatedDurationInMillis?: number;
  latestRun?: string;
  name?: string;
  organization?: string;
  weatherScore?: number;
  branchNames?: Array<string>;
  numberOfFailingBranches?: number;
  numberOfFailingPullRequests?: number;
  numberOfSuccessfulBranches?: number;
  numberOfSuccessfulPullRequests?: number;
  totalNumberOfBranches?: number;
  totalNumberOfPullRequests?: number;
  class?: string;
}

export interface NullSCM {
  class?: string;
}

export interface Organisation {
  class?: string;
  name?: string;
}

export interface Organisations extends Array<Organisation> {
}

export interface Pipeline {
  class?: string;
  organization?: string;
  name?: string;
  displayName?: string;
  fullName?: string;
  weatherScore?: number;
  estimatedDurationInMillis?: number;
  latestRun?: PipelinelatestRun;
}

export interface PipelineActivities extends Array<PipelineActivity> {
}

export interface PipelineActivity {
  class?: string;
  artifacts?: Array<PipelineActivityartifacts>;
  durationInMillis?: number;
  estimatedDurationInMillis?: number;
  enQueueTime?: string;
  endTime?: string;
  id?: string;
  organization?: string;
  pipeline?: string;
  result?: string;
  runSummary?: string;
  startTime?: string;
  state?: string;
  type?: string;
  commitId?: string;
}

export interface PipelineActivityartifacts {
  name?: string;
  size?: number;
  url?: string;
  class?: string;
}

export interface PipelineBranches extends Array<PipelineBranchesitem> {
}

export interface PipelineBranchesitem {
  displayName?: string;
  estimatedDurationInMillis?: number;
  name?: string;
  weatherScore?: number;
  latestRun?: PipelineBranchesitemlatestRun;
  organization?: string;
  pullRequest?: PipelineBranchesitempullRequest;
  totalNumberOfPullRequests?: number;
  class?: string;
}

export interface PipelineBranchesitemlatestRun {
  durationInMillis?: number;
  estimatedDurationInMillis?: number;
  enQueueTime?: string;
  endTime?: string;
  id?: string;
  organization?: string;
  pipeline?: string;
  result?: string;
  runSummary?: string;
  startTime?: string;
  state?: string;
  type?: string;
  commitId?: string;
  class?: string;
}

export interface PipelineBranchesitempullRequest {
  links?: PipelineBranchesitempullRequestlinks;
  author?: string;
  id?: string;
  title?: string;
  url?: string;
  class?: string;
}

export interface PipelineBranchesitempullRequestlinks {
  self?: string;
  class?: string;
}

export interface PipelineFolderImpl {
  class?: string;
  displayName?: string;
  fullName?: string;
  name?: string;
  organization?: string;
  numberOfFolders?: number;
  numberOfPipelines?: number;
}

export interface PipelineImpl {
  class?: string;
  displayName?: string;
  estimatedDurationInMillis?: number;
  fullName?: string;
  latestRun?: string;
  name?: string;
  organization?: string;
  weatherScore?: number;
  links?: PipelineImpllinks;
}

export interface PipelineImpllinks {
  runs?: Link;
  self?: Link;
  queue?: Link;
  actions?: Link;
  class?: string;
}

export interface PipelineQueue extends Array<QueueItemImpl> {
}

export interface PipelineRun {
  class?: string;
  artifacts?: Array<PipelineRunartifacts>;
  durationInMillis?: number;
  estimatedDurationInMillis?: number;
  enQueueTime?: string;
  endTime?: string;
  id?: string;
  organization?: string;
  pipeline?: string;
  result?: string;
  runSummary?: string;
  startTime?: string;
  state?: string;
  type?: string;
  commitId?: string;
}

export interface PipelineRunImpl {
  class?: string;
  links?: PipelineRunImpllinks;
  durationInMillis?: number;
  enQueueTime?: string;
  endTime?: string;
  estimatedDurationInMillis?: number;
  id?: string;
  organization?: string;
  pipeline?: string;
  result?: string;
  runSummary?: string;
  startTime?: string;
  state?: string;
  type?: string;
  commitId?: string;
}

export interface PipelineRunImpllinks {
  nodes?: Link;
  log?: Link;
  self?: Link;
  actions?: Link;
  steps?: Link;
  class?: string;
}

export interface PipelineRunNode {
  class?: string;
  displayName?: string;
  durationInMillis?: number;
  edges?: Array<PipelineRunNodeedges>;
  id?: string;
  result?: string;
  startTime?: string;
  state?: string;
}

export interface PipelineRunNodeSteps extends Array<PipelineStepImpl> {
}

export interface PipelineRunNodeedges {
  id?: string;
  class?: string;
}

export interface PipelineRunNodes extends Array<PipelineRunNode> {
}

export interface PipelineRunSteps extends Array<GenericResource> {
}

export interface PipelineRunartifacts {
  name?: string;
  size?: number;
  url?: string;
  class?: string;
}

export interface PipelineRuns extends Array<PipelineRun> {
}

export interface PipelineStepImpl {
  class?: string;
  links?: PipelineStepImpllinks;
  displayName?: string;
  durationInMillis?: number;
  id?: string;
  input?: InputStepImpl;
  result?: string;
  startTime?: string;
  state?: string;
}

export interface PipelineStepImpllinks {
  self?: Link;
  actions?: Link;
  class?: string;
}

export interface PipelinelatestRun {
  artifacts?: Array<PipelinelatestRunartifacts>;
  durationInMillis?: number;
  estimatedDurationInMillis?: number;
  enQueueTime?: string;
  endTime?: string;
  id?: string;
  organization?: string;
  pipeline?: string;
  result?: string;
  runSummary?: string;
  startTime?: string;
  state?: string;
  type?: string;
  commitId?: string;
  class?: string;
}

export interface PipelinelatestRunartifacts {
  name?: string;
  size?: number;
  url?: string;
  class?: string;
}

export interface Pipelines extends Array<Pipeline> {
}

export interface Queue {
  class?: string;
  items?: Array<QueueBlockedItem>;
}

export interface QueueBlockedItem {
  class?: string;
  actions?: Array<CauseAction>;
  blocked?: boolean;
  buildable?: boolean;
  id?: number;
  inQueueSince?: number;
  params?: string;
  stuck?: boolean;
  task?: FreeStyleProject;
  url?: string;
  why?: string;
  buildableStartMilliseconds?: number;
}

export interface QueueItemImpl {
  class?: string;
  expectedBuildNumber?: number;
  id?: string;
  pipeline?: string;
  queuedTime?: number;
}

export interface QueueLeftItem {
  class?: string;
  actions?: Array<CauseAction>;
  blocked?: boolean;
  buildable?: boolean;
  id?: number;
  inQueueSince?: number;
  params?: string;
  stuck?: boolean;
  task?: FreeStyleProject;
  url?: string;
  why?: string;
  cancelled?: boolean;
  executable?: FreeStyleBuild;
}

export interface ResponseTimeMonitorData {
  class?: string;
  timestamp?: number;
  average?: number;
}

export interface ScmOrganisations extends Array<GithubOrganization> {
}

export interface StringParameterDefinition {
  class?: string;
  defaultParameterValue?: StringParameterValue;
  description?: string;
  name?: string;
  type?: string;
}

export interface StringParameterValue {
  class?: string;
  name?: string;
  value?: string;
}

export interface SwapSpaceMonitorMemoryUsage2 {
  class?: string;
  availablePhysicalMemory?: number;
  availableSwapSpace?: number;
  totalPhysicalMemory?: number;
  totalSwapSpace?: number;
}

export interface UnlabeledLoadStatistics {
  class?: string;
}

export interface User {
  class?: string;
  id?: string;
  fullName?: string;
  email?: string;
  name?: string;
}

export interface UserFavorites extends Array<FavoriteImpl> {
}

export interface Users extends Array<User> {
}

