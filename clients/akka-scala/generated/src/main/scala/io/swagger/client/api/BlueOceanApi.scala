/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.GetMultibranchPipeline
import io.swagger.client.model.GetOrganisations
import io.swagger.client.model.GetPipelines
import io.swagger.client.model.IojenkinsblueoceanrestimplpipelineBranchImpl
import io.swagger.client.model.IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl
import io.swagger.client.model.IojenkinsblueoceanserviceembeddedrestPipelineImpl
import io.swagger.client.model.SwaggyjenkinsOrganisation
import io.swagger.client.model.SwaggyjenkinsPipeline
import io.swagger.client.model.SwaggyjenkinsUser
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object BlueOceanApi {

  /**
   * Retrieve authenticated user details for an organisation
   * 
   * Expected answers:
   *   code 200 : SwaggyjenkinsUser (Successfully retrieved authenticated user details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   */
  def getAuthenticatedUser(organisation: String): ApiRequest[SwaggyjenkinsUser] =
    ApiRequest[SwaggyjenkinsUser](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/user/", "application/json")
      .withPathParam("organisation", organisation)
      .withSuccessResponse[SwaggyjenkinsUser](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Get a list of class names supported by a given class
   * 
   * Expected answers:
   *   code 200 : String (Successfully retrieved class names)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param &#x60;class&#x60; Name of the class
   */
  def getClasses(&#x60;class&#x60;: String): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "http://localhost", "/blue/rest/classes/{class}", "application/json")
      .withPathParam("class", `class`)
      .withSuccessResponse[String](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve organisation details
   * 
   * Expected answers:
   *   code 200 : SwaggyjenkinsOrganisation (Successfully retrieved pipeline details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Pipeline cannot be found on Jenkins instance)
   * 
   * @param organisation Name of the organisation
   */
  def getOrganisation(organisation: String): ApiRequest[SwaggyjenkinsOrganisation] =
    ApiRequest[SwaggyjenkinsOrganisation](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}", "application/json")
      .withPathParam("organisation", organisation)
      .withSuccessResponse[SwaggyjenkinsOrganisation](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve all organisations details
   * 
   * Expected answers:
   *   code 200 : GetOrganisations (Successfully retrieved pipelines details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   */
  def getOrganisations(): ApiRequest[GetOrganisations] =
    ApiRequest[GetOrganisations](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/", "application/json")
      .withSuccessResponse[GetOrganisations](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve branch details for an organisation pipeline
   * 
   * Expected answers:
   *   code 200 : IojenkinsblueoceanrestimplpipelineBranchImpl (Successfully retrieved branch details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   * @param pipeline Name of the pipeline
   * @param branch Name of the branch
   */
  def getPipelineBranchByOrg(organisation: String, pipeline: String, branch: String): ApiRequest[IojenkinsblueoceanrestimplpipelineBranchImpl] =
    ApiRequest[IojenkinsblueoceanrestimplpipelineBranchImpl](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches/{branch}/", "application/json")
      .withPathParam("organisation", organisation)
      .withPathParam("pipeline", pipeline)
      .withPathParam("branch", branch)
      .withSuccessResponse[IojenkinsblueoceanrestimplpipelineBranchImpl](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve all branches details for an organisation pipeline
   * 
   * Expected answers:
   *   code 200 : GetMultibranchPipeline (Successfully retrieved all branches details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   * @param pipeline Name of the pipeline
   */
  def getPipelineBranchesByOrg(organisation: String, pipeline: String): ApiRequest[GetMultibranchPipeline] =
    ApiRequest[GetMultibranchPipeline](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches", "application/json")
      .withPathParam("organisation", organisation)
      .withPathParam("pipeline", pipeline)
      .withSuccessResponse[GetMultibranchPipeline](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve pipeline details for an organisation
   * 
   * Expected answers:
   *   code 200 : SwaggyjenkinsPipeline (Successfully retrieved pipeline details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Pipeline cannot be found on Jenkins instance)
   * 
   * @param organisation Name of the organisation
   * @param pipeline Name of the pipeline
   */
  def getPipelineByOrg(organisation: String, pipeline: String): ApiRequest[SwaggyjenkinsPipeline] =
    ApiRequest[SwaggyjenkinsPipeline](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/pipelines/{pipeline}", "application/json")
      .withPathParam("organisation", organisation)
      .withPathParam("pipeline", pipeline)
      .withSuccessResponse[SwaggyjenkinsPipeline](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve pipeline folder for an organisation
   * 
   * Expected answers:
   *   code 200 : IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl (Successfully retrieved folder details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   * @param folder Name of the folder
   */
  def getPipelineFolderByOrg(organisation: String, folder: String): ApiRequest[IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl] =
    ApiRequest[IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/pipelines/{folder}/", "application/json")
      .withPathParam("organisation", organisation)
      .withPathParam("folder", folder)
      .withSuccessResponse[IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve pipeline details for an organisation folder
   * 
   * Expected answers:
   *   code 200 : IojenkinsblueoceanserviceembeddedrestPipelineImpl (Successfully retrieved pipeline details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   * @param pipeline Name of the pipeline
   * @param folder Name of the folder
   */
  def getPipelineFolderByOrg_0(organisation: String, pipeline: String, folder: String): ApiRequest[IojenkinsblueoceanserviceembeddedrestPipelineImpl] =
    ApiRequest[IojenkinsblueoceanserviceembeddedrestPipelineImpl](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/pipelines/{folder}/pipelines/{pipeline}", "application/json")
      .withPathParam("organisation", organisation)
      .withPathParam("pipeline", pipeline)
      .withPathParam("folder", folder)
      .withSuccessResponse[IojenkinsblueoceanserviceembeddedrestPipelineImpl](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve all pipelines details for an organisation
   * 
   * Expected answers:
   *   code 200 : GetPipelines (Successfully retrieved pipelines details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   */
  def getPipelinesByOrg(organisation: String): ApiRequest[GetPipelines] =
    ApiRequest[GetPipelines](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/pipelines/", "application/json")
      .withPathParam("organisation", organisation)
      .withSuccessResponse[GetPipelines](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve user details for an organisation
   * 
   * Expected answers:
   *   code 200 : SwaggyjenkinsUser (Successfully retrieved users details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   * @param user Name of the user
   */
  def getUser(organisation: String, user: String): ApiRequest[SwaggyjenkinsUser] =
    ApiRequest[SwaggyjenkinsUser](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/users/{user}", "application/json")
      .withPathParam("organisation", organisation)
      .withPathParam("user", user)
      .withSuccessResponse[SwaggyjenkinsUser](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve users details for an organisation
   * 
   * Expected answers:
   *   code 200 : SwaggyjenkinsUser (Successfully retrieved users details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param organisation Name of the organisation
   */
  def getUsers(organisation: String): ApiRequest[SwaggyjenkinsUser] =
    ApiRequest[SwaggyjenkinsUser](ApiMethods.GET, "http://localhost", "/blue/rest/organizations/{organisation}/users/", "application/json")
      .withPathParam("organisation", organisation)
      .withSuccessResponse[SwaggyjenkinsUser](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Get classes details
   * 
   * Expected answers:
   *   code 200 : String (Successfully retrieved search result)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param &#x60;q&#x60; Query string containing an array of class names
   */
  def search(&#x60;q&#x60;: String): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "http://localhost", "/blue/rest/classes/", "application/json")
      .withQueryParam("q", `q`)
      .withSuccessResponse[String](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Search for any resource details
   * 
   * Expected answers:
   *   code 200 : String (Successfully retrieved search result)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param &#x60;q&#x60; Query string
   */
  def search_0(&#x60;q&#x60;: String): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "http://localhost", "/blue/rest/search/", "application/json")
      .withQueryParam("q", `q`)
      .withSuccessResponse[String](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      

}

