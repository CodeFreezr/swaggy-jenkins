/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1()
{
    m__class = U("");
    m__classIsSet = false;
    m__linksIsSet = false;
    m_mapIsSet = false;
    
}

IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::~IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1()
{
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::validate()
{
    // TODO: implement validation
}

web::json::value IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m__classIsSet)
    {
        val[U("_class")] = ModelBase::toJson(m__class);
    }
    if(m__linksIsSet)
    {
        val[U("_links")] = ModelBase::toJson(m__links);
    }
    if(m_mapIsSet)
    {
        val[U("map")] = ModelBase::toJson(m_map);
    }
    

    return val;
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::fromJson(web::json::value& val)
{
    if(val.has_field(U("_class")))
    {
        setClass(ModelBase::stringFromJson(val[U("_class")]));
        
    }
    if(val.has_field(U("_links")))
    {
        if(!val[U("_links")].is_null())
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links());
            newItem->fromJson(val[U("_links")]);
            setLinks( newItem );
        }
        
    }
    if(val.has_field(U("map")))
    {
        if(!val[U("map")].is_null())
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map());
            newItem->fromJson(val[U("map")]);
            setMap( newItem );
        }
        
    }
    
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(m__classIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("_class"), m__class));
        
    }
    if(m__linksIsSet)
    {
        if (m__links.get())
        {
            m__links->toMultipart(multipart, U("_links."));
        }
        
    }
    if(m_mapIsSet)
    {
        if (m_map.get())
        {
            m_map->toMultipart(multipart, U("map."));
        }
        
    }
    
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(multipart->hasContent(U("_class")))
    {
        setClass(ModelBase::stringFromHttpContent(multipart->getContent(U("_class"))));
        
    }
    if(multipart->hasContent(U("_links")))
    {
        if(multipart->hasContent(U("_links")))
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links());
            newItem->fromMultiPart(multipart, U("_links."));
            setLinks( newItem );
        }
        
    }
    if(multipart->hasContent(U("map")))
    {
        if(multipart->hasContent(U("map")))
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map());
            newItem->fromMultiPart(multipart, U("map."));
            setMap( newItem );
        }
        
    }
    
}


utility::string_t IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::getClass() const
{
    return m__class;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::setClass(utility::string_t value)
{
    m__class = value;
    m__classIsSet = true;
}
bool IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::_classIsSet() const
{
    return m__classIsSet;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::unset_class()
{
    m__classIsSet = false;
}
std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links> IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::getLinks() const
{
    return m__links;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::setLinks(std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links> value)
{
    m__links = value;
    m__linksIsSet = true;
}
bool IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::_linksIsSet() const
{
    return m__linksIsSet;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::unset_links()
{
    m__linksIsSet = false;
}
std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map> IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::getMap() const
{
    return m_map;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::setMap(std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map> value)
{
    m_map = value;
    m_mapIsSet = true;
}
bool IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::mapIsSet() const
{
    return m_mapIsSet;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1::unsetmap()
{
    m_mapIsSet = false;
}

}
}
}
}

