/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */



#include "IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map()
{
    m_Io.jenkins.blueocean.service.embedded.rest.PipelineImplIsSet = false;
    m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImplIsSet = false;
    m__class = U("");
    m__classIsSet = false;
    
}

IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::~IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map()
{
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::validate()
{
    // TODO: implement validation
}

web::json::value IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::toJson() const
{
    web::json::value val = web::json::value::object();

    if(m_Io.jenkins.blueocean.service.embedded.rest.PipelineImplIsSet)
    {
        val[U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl")] = ModelBase::toJson(m_Io.jenkins.blueocean.service.embedded.rest.PipelineImpl);
    }
    if(m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImplIsSet)
    {
        val[U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl")] = ModelBase::toJson(m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl);
    }
    if(m__classIsSet)
    {
        val[U("_class")] = ModelBase::toJson(m__class);
    }
    

    return val;
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::fromJson(web::json::value& val)
{
    if(val.has_field(U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl")))
    {
        if(!val[U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl")].is_null())
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassImpl());
            newItem->fromJson(val[U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl")]);
            setIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl( newItem );
        }
        
    }
    if(val.has_field(U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl")))
    {
        if(!val[U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl")].is_null())
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassImpl());
            newItem->fromJson(val[U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl")]);
            setIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl( newItem );
        }
        
    }
    if(val.has_field(U("_class")))
    {
        setClass(ModelBase::stringFromJson(val[U("_class")]));
        
    }
    
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(m_Io.jenkins.blueocean.service.embedded.rest.PipelineImplIsSet)
    {
        if (m_Io.jenkins.blueocean.service.embedded.rest.PipelineImpl.get())
        {
            m_Io.jenkins.blueocean.service.embedded.rest.PipelineImpl->toMultipart(multipart, U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl."));
        }
        
    }
    if(m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImplIsSet)
    {
        if (m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl.get())
        {
            m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl->toMultipart(multipart, U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl."));
        }
        
    }
    if(m__classIsSet)
    {
        multipart->add(ModelBase::toHttpContent(namePrefix + U("_class"), m__class));
        
    }
    
}

void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix[namePrefix.size() - 1] != U('.'))
    {
        namePrefix += U(".");
    }

    if(multipart->hasContent(U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl")))
    {
        if(multipart->hasContent(U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl")))
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassImpl());
            newItem->fromMultiPart(multipart, U("io.jenkins.blueocean.service.embedded.rest.PipelineImpl."));
            setIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl( newItem );
        }
        
    }
    if(multipart->hasContent(U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl")))
    {
        if(multipart->hasContent(U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl")))
        {
            std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> newItem(new IojenkinsblueoceanserviceembeddedrestExtensionClassImpl());
            newItem->fromMultiPart(multipart, U("io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl."));
            setIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl( newItem );
        }
        
    }
    if(multipart->hasContent(U("_class")))
    {
        setClass(ModelBase::stringFromHttpContent(multipart->getContent(U("_class"))));
        
    }
    
}


std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::getIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl() const
{
    return m_Io.jenkins.blueocean.service.embedded.rest.PipelineImpl;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::setIoJenkinsBlueoceanServiceEmbeddedRestPipelineImpl(std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> value)
{
    m_Io.jenkins.blueocean.service.embedded.rest.PipelineImpl = value;
    m_Io.jenkins.blueocean.service.embedded.rest.PipelineImplIsSet = true;
}
bool IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::io.jenkins.blueocean.service.embedded.rest.PipelineImplIsSet() const
{
    return m_Io.jenkins.blueocean.service.embedded.rest.PipelineImplIsSet;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::unsetIo.jenkins.blueocean.service.embedded.rest.PipelineImpl()
{
    m_Io.jenkins.blueocean.service.embedded.rest.PipelineImplIsSet = false;
}
std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::getIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl() const
{
    return m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::setIoJenkinsBlueoceanServiceEmbeddedRestMultiBranchPipelineImpl(std::shared_ptr<IojenkinsblueoceanserviceembeddedrestExtensionClassImpl> value)
{
    m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl = value;
    m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImplIsSet = true;
}
bool IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImplIsSet() const
{
    return m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImplIsSet;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::unsetIo.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImpl()
{
    m_Io.jenkins.blueocean.service.embedded.rest.MultiBranchPipelineImplIsSet = false;
}
utility::string_t IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::getClass() const
{
    return m__class;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::setClass(utility::string_t value)
{
    m__class = value;
    m__classIsSet = true;
}
bool IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::_classIsSet() const
{
    return m__classIsSet;
}
void IojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map::unset_class()
{
    m__classIsSet = false;
}

}
}
}
}

