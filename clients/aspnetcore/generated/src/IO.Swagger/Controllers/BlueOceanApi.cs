/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.IO;
using System.Linq;
using System.Net;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;
using Swashbuckle.SwaggerGen.Annotations;
using IO.Swagger.Models;

namespace IO.Swagger.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    public class BlueOceanApiController : Controller
    { 

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve authenticated user details for an organisation</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <response code="200">Successfully retrieved authenticated user details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/user/")]
        [SwaggerOperation("GetAuthenticatedUser")]
        [SwaggerResponse(200, type: typeof(SwaggyjenkinsUser))]
        public virtual IActionResult GetAuthenticatedUser([FromRoute]string organisation)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SwaggyjenkinsUser>(exampleJson)
            : default(SwaggyjenkinsUser);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get a list of class names supported by a given class</remarks>
        /// <param name="class">Name of the class</param>
        /// <response code="200">Successfully retrieved class names</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/classes/{class}")]
        [SwaggerOperation("GetClasses")]
        [SwaggerResponse(200, type: typeof(string))]
        public virtual IActionResult GetClasses([FromRoute]string class)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve organisation details</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <response code="200">Successfully retrieved pipeline details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Pipeline cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}")]
        [SwaggerOperation("GetOrganisation")]
        [SwaggerResponse(200, type: typeof(SwaggyjenkinsOrganisation))]
        public virtual IActionResult GetOrganisation([FromRoute]string organisation)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SwaggyjenkinsOrganisation>(exampleJson)
            : default(SwaggyjenkinsOrganisation);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve all organisations details</remarks>
        /// <response code="200">Successfully retrieved pipelines details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/")]
        [SwaggerOperation("GetOrganisations")]
        [SwaggerResponse(200, type: typeof(GetOrganisations))]
        public virtual IActionResult GetOrganisations()
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GetOrganisations>(exampleJson)
            : default(GetOrganisations);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve branch details for an organisation pipeline</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <param name="pipeline">Name of the pipeline</param>
        /// <param name="branch">Name of the branch</param>
        /// <response code="200">Successfully retrieved branch details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches/{branch}/")]
        [SwaggerOperation("GetPipelineBranchByOrg")]
        [SwaggerResponse(200, type: typeof(IojenkinsblueoceanrestimplpipelineBranchImpl))]
        public virtual IActionResult GetPipelineBranchByOrg([FromRoute]string organisation, [FromRoute]string pipeline, [FromRoute]string branch)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IojenkinsblueoceanrestimplpipelineBranchImpl>(exampleJson)
            : default(IojenkinsblueoceanrestimplpipelineBranchImpl);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve all branches details for an organisation pipeline</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <param name="pipeline">Name of the pipeline</param>
        /// <response code="200">Successfully retrieved all branches details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/pipelines/{pipeline}/branches")]
        [SwaggerOperation("GetPipelineBranchesByOrg")]
        [SwaggerResponse(200, type: typeof(GetMultibranchPipeline))]
        public virtual IActionResult GetPipelineBranchesByOrg([FromRoute]string organisation, [FromRoute]string pipeline)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GetMultibranchPipeline>(exampleJson)
            : default(GetMultibranchPipeline);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve pipeline details for an organisation</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <param name="pipeline">Name of the pipeline</param>
        /// <response code="200">Successfully retrieved pipeline details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        /// <response code="404">Pipeline cannot be found on Jenkins instance</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/pipelines/{pipeline}")]
        [SwaggerOperation("GetPipelineByOrg")]
        [SwaggerResponse(200, type: typeof(SwaggyjenkinsPipeline))]
        public virtual IActionResult GetPipelineByOrg([FromRoute]string organisation, [FromRoute]string pipeline)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SwaggyjenkinsPipeline>(exampleJson)
            : default(SwaggyjenkinsPipeline);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve pipeline folder for an organisation</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <param name="folder">Name of the folder</param>
        /// <response code="200">Successfully retrieved folder details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/pipelines/{folder}/")]
        [SwaggerOperation("GetPipelineFolderByOrg")]
        [SwaggerResponse(200, type: typeof(IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl))]
        public virtual IActionResult GetPipelineFolderByOrg([FromRoute]string organisation, [FromRoute]string folder)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl>(exampleJson)
            : default(IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve pipeline details for an organisation folder</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <param name="pipeline">Name of the pipeline</param>
        /// <param name="folder">Name of the folder</param>
        /// <response code="200">Successfully retrieved pipeline details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/pipelines/{folder}/pipelines/{pipeline}")]
        [SwaggerOperation("GetPipelineFolderByOrg_0")]
        [SwaggerResponse(200, type: typeof(IojenkinsblueoceanserviceembeddedrestPipelineImpl))]
        public virtual IActionResult GetPipelineFolderByOrg_0([FromRoute]string organisation, [FromRoute]string pipeline, [FromRoute]string folder)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<IojenkinsblueoceanserviceembeddedrestPipelineImpl>(exampleJson)
            : default(IojenkinsblueoceanserviceembeddedrestPipelineImpl);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve all pipelines details for an organisation</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <response code="200">Successfully retrieved pipelines details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/pipelines/")]
        [SwaggerOperation("GetPipelinesByOrg")]
        [SwaggerResponse(200, type: typeof(GetPipelines))]
        public virtual IActionResult GetPipelinesByOrg([FromRoute]string organisation)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<GetPipelines>(exampleJson)
            : default(GetPipelines);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve user details for an organisation</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <param name="user">Name of the user</param>
        /// <response code="200">Successfully retrieved users details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/users/{user}")]
        [SwaggerOperation("GetUser")]
        [SwaggerResponse(200, type: typeof(SwaggyjenkinsUser))]
        public virtual IActionResult GetUser([FromRoute]string organisation, [FromRoute]string user)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SwaggyjenkinsUser>(exampleJson)
            : default(SwaggyjenkinsUser);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Retrieve users details for an organisation</remarks>
        /// <param name="organisation">Name of the organisation</param>
        /// <response code="200">Successfully retrieved users details</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/organizations/{organisation}/users/")]
        [SwaggerOperation("GetUsers")]
        [SwaggerResponse(200, type: typeof(SwaggyjenkinsUser))]
        public virtual IActionResult GetUsers([FromRoute]string organisation)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<SwaggyjenkinsUser>(exampleJson)
            : default(SwaggyjenkinsUser);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Get classes details</remarks>
        /// <param name="q">Query string containing an array of class names</param>
        /// <response code="200">Successfully retrieved search result</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/classes/")]
        [SwaggerOperation("Search")]
        [SwaggerResponse(200, type: typeof(string))]
        public virtual IActionResult Search([FromQuery]string q)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            return new ObjectResult(example);
        }


        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Search for any resource details</remarks>
        /// <param name="q">Query string</param>
        /// <response code="200">Successfully retrieved search result</response>
        /// <response code="401">Authentication failed - incorrect username and/or password</response>
        /// <response code="403">Jenkins requires authentication - please set username and password</response>
        [HttpGet]
        [Route("//blue/rest/search/")]
        [SwaggerOperation("Search_0")]
        [SwaggerResponse(200, type: typeof(string))]
        public virtual IActionResult Search_0([FromQuery]string q)
        { 
            string exampleJson = null;
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<string>(exampleJson)
            : default(string);
            return new ObjectResult(example);
        }
    }
}
