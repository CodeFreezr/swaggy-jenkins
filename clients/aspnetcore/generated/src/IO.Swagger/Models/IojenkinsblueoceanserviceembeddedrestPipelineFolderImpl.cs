/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{

    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl :  IEquatable<IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl" /> class.
        /// </summary>
        /// <param name="Class">Class.</param>
        /// <param name="DisplayName">DisplayName.</param>
        /// <param name="FullName">FullName.</param>
        /// <param name="Name">Name.</param>
        /// <param name="Organization">Organization.</param>
        /// <param name="NumberOfFolders">NumberOfFolders.</param>
        /// <param name="NumberOfPipelines">NumberOfPipelines.</param>
        public IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl(string Class = default(string), string DisplayName = default(string), string FullName = default(string), string Name = default(string), string Organization = default(string), int? NumberOfFolders = default(int?), int? NumberOfPipelines = default(int?))
        {
            this.Class = Class;
            this.DisplayName = DisplayName;
            this.FullName = FullName;
            this.Name = Name;
            this.Organization = Organization;
            this.NumberOfFolders = NumberOfFolders;
            this.NumberOfPipelines = NumberOfPipelines;
            
        }

        /// <summary>
        /// Gets or Sets Class
        /// </summary>
        [DataMember(Name="_class")]
        public string Class { get; set; }
        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name="displayName")]
        public string DisplayName { get; set; }
        /// <summary>
        /// Gets or Sets FullName
        /// </summary>
        [DataMember(Name="fullName")]
        public string FullName { get; set; }
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name")]
        public string Name { get; set; }
        /// <summary>
        /// Gets or Sets Organization
        /// </summary>
        [DataMember(Name="organization")]
        public string Organization { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfFolders
        /// </summary>
        [DataMember(Name="numberOfFolders")]
        public int? NumberOfFolders { get; set; }
        /// <summary>
        /// Gets or Sets NumberOfPipelines
        /// </summary>
        [DataMember(Name="numberOfPipelines")]
        public int? NumberOfPipelines { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl {\n");
            sb.Append("  Class: ").Append(Class).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  FullName: ").Append(FullName).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("  NumberOfFolders: ").Append(NumberOfFolders).Append("\n");
            sb.Append("  NumberOfPipelines: ").Append(NumberOfPipelines).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl)obj);
        }

        /// <summary>
        /// Returns true if IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl instances are equal
        /// </summary>
        /// <param name="other">Instance of IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl other)
        {

            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    this.Class == other.Class ||
                    this.Class != null &&
                    this.Class.Equals(other.Class)
                ) && 
                (
                    this.DisplayName == other.DisplayName ||
                    this.DisplayName != null &&
                    this.DisplayName.Equals(other.DisplayName)
                ) && 
                (
                    this.FullName == other.FullName ||
                    this.FullName != null &&
                    this.FullName.Equals(other.FullName)
                ) && 
                (
                    this.Name == other.Name ||
                    this.Name != null &&
                    this.Name.Equals(other.Name)
                ) && 
                (
                    this.Organization == other.Organization ||
                    this.Organization != null &&
                    this.Organization.Equals(other.Organization)
                ) && 
                (
                    this.NumberOfFolders == other.NumberOfFolders ||
                    this.NumberOfFolders != null &&
                    this.NumberOfFolders.Equals(other.NumberOfFolders)
                ) && 
                (
                    this.NumberOfPipelines == other.NumberOfPipelines ||
                    this.NumberOfPipelines != null &&
                    this.NumberOfPipelines.Equals(other.NumberOfPipelines)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                    if (this.Class != null)
                    hash = hash * 59 + this.Class.GetHashCode();
                    if (this.DisplayName != null)
                    hash = hash * 59 + this.DisplayName.GetHashCode();
                    if (this.FullName != null)
                    hash = hash * 59 + this.FullName.GetHashCode();
                    if (this.Name != null)
                    hash = hash * 59 + this.Name.GetHashCode();
                    if (this.Organization != null)
                    hash = hash * 59 + this.Organization.GetHashCode();
                    if (this.NumberOfFolders != null)
                    hash = hash * 59 + this.NumberOfFolders.GetHashCode();
                    if (this.NumberOfPipelines != null)
                    hash = hash * 59 + this.NumberOfPipelines.GetHashCode();
                return hash;
            }
        }

        #region Operators

        public static bool operator ==(IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl left, IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl left, IojenkinsblueoceanserviceembeddedrestPipelineFolderImpl right)
        {
            return !Equals(left, right);
        }

        #endregion Operators

    }
}
