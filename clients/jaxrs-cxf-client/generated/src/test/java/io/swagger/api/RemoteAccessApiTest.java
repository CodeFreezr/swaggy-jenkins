/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.api;

import io.swagger.model.ComputerSet;
import io.swagger.model.DefaultCrumbIssuer;
import io.swagger.model.FreeStyleBuild;
import io.swagger.model.FreeStyleProject;
import io.swagger.model.Hudson;
import io.swagger.model.ListView;
import io.swagger.model.Queue;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * API tests for RemoteAccessApi
 */
public class RemoteAccessApiTest {


    private RemoteAccessApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("http://localhost", RemoteAccessApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    
    /**
     * 
     *
     * Retrieve computer details
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getComputerTest() {
        Integer depth = null;
        //ComputerSet response = api.getComputer(depth);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve CSRF protection token
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCrumbTest() {
        //DefaultCrumbIssuer response = api.getCrumb();
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve Jenkins details
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJenkinsTest() {
        //Hudson response = api.getJenkins();
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve job details
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobTest() {
        String name = null;
        //FreeStyleProject response = api.getJob(name);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve job configuration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobConfigTest() {
        String name = null;
        //String response = api.getJobConfig(name);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve job&#39;s last build details
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobLastBuildTest() {
        String name = null;
        //FreeStyleBuild response = api.getJobLastBuild(name);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve job&#39;s build progressive text output
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getJobProgressiveTextTest() {
        String name = null;
        String number = null;
        String start = null;
        //api.getJobProgressiveText(name, number, start);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve queue details
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueueTest() {
        //Queue response = api.getQueue();
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve queued item details
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQueueItemTest() {
        String number = null;
        //Queue response = api.getQueueItem(number);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve view details
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getViewTest() {
        String name = null;
        //ListView response = api.getView(name);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve view configuration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getViewConfigTest() {
        String name = null;
        //String response = api.getViewConfig(name);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Retrieve Jenkins headers
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void headJenkinsTest() {
        //api.headJenkins();
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Create a new job using job configuration, or copied from an existing job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCreateItemTest() {
        String name = null;
        String from = null;
        String mode = null;
        String body = null;
        String jenkinsCrumb = null;
        String contentType = null;
        //api.postCreateItem(name, from, mode, body, jenkinsCrumb, contentType);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Create a new view using view configuration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postCreateViewTest() {
        String name = null;
        String body = null;
        String jenkinsCrumb = null;
        String contentType = null;
        //api.postCreateView(name, body, jenkinsCrumb, contentType);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Build a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobBuildTest() {
        String name = null;
        String json = null;
        String token = null;
        String jenkinsCrumb = null;
        //api.postJobBuild(name, json, token, jenkinsCrumb);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Update job configuration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobConfigTest() {
        String name = null;
        String body = null;
        String jenkinsCrumb = null;
        //api.postJobConfig(name, body, jenkinsCrumb);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Delete a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobDeleteTest() {
        String name = null;
        String jenkinsCrumb = null;
        //api.postJobDelete(name, jenkinsCrumb);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Disable a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobDisableTest() {
        String name = null;
        String jenkinsCrumb = null;
        //api.postJobDisable(name, jenkinsCrumb);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Enable a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobEnableTest() {
        String name = null;
        String jenkinsCrumb = null;
        //api.postJobEnable(name, jenkinsCrumb);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Stop a job
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postJobLastBuildStopTest() {
        String name = null;
        String jenkinsCrumb = null;
        //api.postJobLastBuildStop(name, jenkinsCrumb);
        
        // TODO: test validations
        
        
    }
    
    /**
     * 
     *
     * Update view configuration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postViewConfigTest() {
        String name = null;
        String body = null;
        String jenkinsCrumb = null;
        //api.postViewConfig(name, body, jenkinsCrumb);
        
        // TODO: test validations
        
        
    }
    
}
