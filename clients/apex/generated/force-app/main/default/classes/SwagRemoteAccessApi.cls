/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagRemoteAccessApi {
    SwagClient client;

    public SwagRemoteAccessApi(SwagClient client) {
        this.client = client;
    }

    public SwagRemoteAccessApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * 
     * Retrieve computer details
     * @param depth Recursion depth in response model (required)
     * @return SwagComputerSet
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagComputerSet getComputer(Map<String, Object> params) {
        client.assertNotNull(params.get('depth'), 'depth');
        List<Swagger.Param> query = new List<Swagger.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('depth', (Integer) params.get('depth')));

        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagComputerSet) client.invoke(
            'GET', '/computer/api/json', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagComputerSet.class
        );
    }
    /**
     * 
     * Retrieve CSRF protection token
     * @return SwagDefaultCrumbIssuer
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagDefaultCrumbIssuer getCrumb() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagDefaultCrumbIssuer) client.invoke(
            'GET', '/crumbIssuer/api/json', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagDefaultCrumbIssuer.class
        );
    }
    /**
     * 
     * Retrieve Jenkins details
     * @return SwagHudson
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagHudson getJenkins() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagHudson) client.invoke(
            'GET', '/api/json', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagHudson.class
        );
    }
    /**
     * 
     * Retrieve job details
     * @param name Name of the job (required)
     * @return SwagFreeStyleProject
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagFreeStyleProject getJob(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagFreeStyleProject) client.invoke(
            'GET', '/job/{name}/api/json', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagFreeStyleProject.class
        );
    }
    /**
     * 
     * Retrieve job configuration
     * @param name Name of the job (required)
     * @return String
     * @throws Swagger.ApiException if fails to make API call
     */
    public String getJobConfig(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (String) client.invoke(
            'GET', '/job/{name}/config.xml', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            String.class
        );
    }
    /**
     * 
     * Retrieve job\&#39;s last build details
     * @param name Name of the job (required)
     * @return SwagFreeStyleBuild
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagFreeStyleBuild getJobLastBuild(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagFreeStyleBuild) client.invoke(
            'GET', '/job/{name}/lastBuild/api/json', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagFreeStyleBuild.class
        );
    }
    /**
     * 
     * Retrieve job\&#39;s build progressive text output
     * @param name Name of the job (required)
     * @param r_number Build number (required)
     * @param start Starting point of progressive text output (required)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void getJobProgressiveText(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        client.assertNotNull(params.get('r_number'), 'r_number');
        client.assertNotNull(params.get('start'), 'start');
        List<Swagger.Param> query = new List<Swagger.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('start', (String) params.get('start')));

        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'GET', '/job/{name}/{number}/logText/progressiveText', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name'),
                'number' => (String) params.get('r_number')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Retrieve queue details
     * @return SwagQueue
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagQueue getQueue() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagQueue) client.invoke(
            'GET', '/queue/api/json', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagQueue.class
        );
    }
    /**
     * 
     * Retrieve queued item details
     * @param r_number Queue number (required)
     * @return SwagQueue
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagQueue getQueueItem(Map<String, Object> params) {
        client.assertNotNull(params.get('r_number'), 'r_number');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagQueue) client.invoke(
            'GET', '/queue/item/{number}/api/json', '',
            query, form,
            new Map<String, Object>{
                'number' => (String) params.get('r_number')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagQueue.class
        );
    }
    /**
     * 
     * Retrieve view details
     * @param name Name of the view (required)
     * @return SwagListView
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagListView getView(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagListView) client.invoke(
            'GET', '/view/{name}/api/json', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            SwagListView.class
        );
    }
    /**
     * 
     * Retrieve view configuration
     * @param name Name of the view (required)
     * @return String
     * @throws Swagger.ApiException if fails to make API call
     */
    public String getViewConfig(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (String) client.invoke(
            'GET', '/view/{name}/config.xml', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            String.class
        );
    }
    /**
     * 
     * Retrieve Jenkins headers
     * @throws Swagger.ApiException if fails to make API call
     */
    public void headJenkins() {
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'HEAD', '/api/json', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Create a new job using job configuration, or copied from an existing job
     * @param name Name of the new job (required)
     * @param r_from Existing job to copy from (optional)
     * @param mode Set to \&#39;copy\&#39; for copying an existing job (optional)
     * @param body Job configuration in config.xml format (optional)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @param contentType Content type header application/xml (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postCreateItem(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('name', (String) params.get('name')));
        query.addAll(client.makeParam('from', (String) params.get('r_from')));
        query.addAll(client.makeParam('mode', (String) params.get('mode')));

        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/createItem',
            (String) params.get('body'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb'),
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Create a new view using view configuration
     * @param name Name of the new view (required)
     * @param body View configuration in config.xml format (optional)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @param contentType Content type header application/xml (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postCreateView(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('name', (String) params.get('name')));

        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/createView',
            (String) params.get('body'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb'),
                'Content-Type' => (String) params.get('contentType')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Build a job
     * @param name Name of the job (required)
     * @param json  (required)
     * @param token  (optional)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postJobBuild(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        client.assertNotNull(params.get('json'), 'json');
        List<Swagger.Param> query = new List<Swagger.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('json', (String) params.get('json')));
        query.addAll(client.makeParam('token', (String) params.get('token')));

        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/job/{name}/build', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Update job configuration
     * @param name Name of the job (required)
     * @param body Job configuration in config.xml format (required)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postJobConfig(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/job/{name}/config.xml',
            (String) params.get('body'),
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Delete a job
     * @param name Name of the job (required)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postJobDelete(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/job/{name}/doDelete', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Disable a job
     * @param name Name of the job (required)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postJobDisable(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/job/{name}/disable', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Enable a job
     * @param name Name of the job (required)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postJobEnable(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/job/{name}/enable', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Stop a job
     * @param name Name of the job (required)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postJobLastBuildStop(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/job/{name}/lastBuild/stop', '',
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
    /**
     * 
     * Update view configuration
     * @param name Name of the view (required)
     * @param body View configuration in config.xml format (required)
     * @param jenkinsCrumb CSRF protection token (optional)
     * @throws Swagger.ApiException if fails to make API call
     */
    public void postViewConfig(Map<String, Object> params) {
        client.assertNotNull(params.get('name'), 'name');
        client.assertNotNull(params.get('body'), 'body');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        client.invoke(
            'POST', '/view/{name}/config.xml',
            (String) params.get('body'),
            query, form,
            new Map<String, Object>{
                'name' => (String) params.get('name')
            },
            new Map<String, Object>{
                'Jenkins-Crumb' => (String) params.get('jenkinsCrumb')
            },
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'jenkins_auth' },
            null
        );
    }
}
