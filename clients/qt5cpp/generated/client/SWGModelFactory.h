/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#ifndef ModelFactory_H_
#define ModelFactory_H_


#include "SWGGetClassesByClass.h"
#include "SWGGetMultibranchPipeline.h"
#include "SWGGetOrganisations.h"
#include "SWGGetPipelineBranches.h"
#include "SWGGetPipelineBranchesitem.h"
#include "SWGGetPipelineBranchesitem_latestRun.h"
#include "SWGGetPipelineBranchesitem_pullRequest.h"
#include "SWGGetPipelineBranchesitem_pullRequest__links.h"
#include "SWGGetPipelines.h"
#include "SWGGetUsers.h"
#include "SWGHudsonmodelAllView.h"
#include "SWGHudsonmodelCauseAction.h"
#include "SWGHudsonmodelCauseUserIdCause.h"
#include "SWGHudsonmodelComputerSet.h"
#include "SWGHudsonmodelFreeStyleBuild.h"
#include "SWGHudsonmodelFreeStyleProject.h"
#include "SWGHudsonmodelFreeStyleProjectactions.h"
#include "SWGHudsonmodelFreeStyleProjecthealthReport.h"
#include "SWGHudsonmodelHudson.h"
#include "SWGHudsonmodelHudsonMasterComputer.h"
#include "SWGHudsonmodelHudsonMasterComputer_monitorData.h"
#include "SWGHudsonmodelHudsonMasterComputerexecutors.h"
#include "SWGHudsonmodelHudsonassignedLabels.h"
#include "SWGHudsonmodelLabel1.h"
#include "SWGHudsonmodelListView.h"
#include "SWGHudsonmodelQueue.h"
#include "SWGHudsonmodelQueueBlockedItem.h"
#include "SWGHudsonmodelQueueLeftItem.h"
#include "SWGHudsonmodelStringParameterDefinition.h"
#include "SWGHudsonmodelStringParameterValue.h"
#include "SWGHudsonnode_monitorsDiskSpaceMonitorDescriptorDiskSpace.h"
#include "SWGHudsonnode_monitorsResponseTimeMonitorData.h"
#include "SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2.h"
#include "SWGHudsonscmEmptyChangeLogSet.h"
#include "SWGHudsonscmNullSCM.h"
#include "SWGHudsonsecuritycsrfDefaultCrumbIssuer.h"
#include "SWGHudsonutilClockDifference.h"
#include "SWGIojenkinsblueoceanresthalLink.h"
#include "SWGIojenkinsblueoceanrestimplpipelineBranchImpl.h"
#include "SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions.h"
#include "SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1.h"
#include "SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links.h"
#include "SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map.h"
#include "SWGIojenkinsblueoceanserviceembeddedrestExtensionClassImpl.h"
#include "SWGIojenkinsblueoceanserviceembeddedrestExtensionClassImpl__links.h"
#include "SWGIojenkinsblueoceanserviceembeddedrestPipelineFolderImpl.h"
#include "SWGIojenkinsblueoceanserviceembeddedrestPipelineImpl.h"
#include "SWGJenkinsmodelUnlabeledLoadStatistics.h"
#include "SWGSwaggyjenkinsOrganisation.h"
#include "SWGSwaggyjenkinsPipeline.h"
#include "SWGSwaggyjenkinsPipeline_latestRun.h"
#include "SWGSwaggyjenkinsPipeline_latestRunartifacts.h"
#include "SWGSwaggyjenkinsUser.h"

namespace Swagger {

  inline void* create(QString type) {
    if(QString("SWGGetClassesByClass").compare(type) == 0) {
      return new SWGGetClassesByClass();
    }
    if(QString("SWGGetMultibranchPipeline").compare(type) == 0) {
      return new SWGGetMultibranchPipeline();
    }
    if(QString("SWGGetOrganisations").compare(type) == 0) {
      return new SWGGetOrganisations();
    }
    if(QString("SWGGetPipelineBranches").compare(type) == 0) {
      return new SWGGetPipelineBranches();
    }
    if(QString("SWGGetPipelineBranchesitem").compare(type) == 0) {
      return new SWGGetPipelineBranchesitem();
    }
    if(QString("SWGGetPipelineBranchesitem_latestRun").compare(type) == 0) {
      return new SWGGetPipelineBranchesitem_latestRun();
    }
    if(QString("SWGGetPipelineBranchesitem_pullRequest").compare(type) == 0) {
      return new SWGGetPipelineBranchesitem_pullRequest();
    }
    if(QString("SWGGetPipelineBranchesitem_pullRequest__links").compare(type) == 0) {
      return new SWGGetPipelineBranchesitem_pullRequest__links();
    }
    if(QString("SWGGetPipelines").compare(type) == 0) {
      return new SWGGetPipelines();
    }
    if(QString("SWGGetUsers").compare(type) == 0) {
      return new SWGGetUsers();
    }
    if(QString("SWGHudsonmodelAllView").compare(type) == 0) {
      return new SWGHudsonmodelAllView();
    }
    if(QString("SWGHudsonmodelCauseAction").compare(type) == 0) {
      return new SWGHudsonmodelCauseAction();
    }
    if(QString("SWGHudsonmodelCauseUserIdCause").compare(type) == 0) {
      return new SWGHudsonmodelCauseUserIdCause();
    }
    if(QString("SWGHudsonmodelComputerSet").compare(type) == 0) {
      return new SWGHudsonmodelComputerSet();
    }
    if(QString("SWGHudsonmodelFreeStyleBuild").compare(type) == 0) {
      return new SWGHudsonmodelFreeStyleBuild();
    }
    if(QString("SWGHudsonmodelFreeStyleProject").compare(type) == 0) {
      return new SWGHudsonmodelFreeStyleProject();
    }
    if(QString("SWGHudsonmodelFreeStyleProjectactions").compare(type) == 0) {
      return new SWGHudsonmodelFreeStyleProjectactions();
    }
    if(QString("SWGHudsonmodelFreeStyleProjecthealthReport").compare(type) == 0) {
      return new SWGHudsonmodelFreeStyleProjecthealthReport();
    }
    if(QString("SWGHudsonmodelHudson").compare(type) == 0) {
      return new SWGHudsonmodelHudson();
    }
    if(QString("SWGHudsonmodelHudsonMasterComputer").compare(type) == 0) {
      return new SWGHudsonmodelHudsonMasterComputer();
    }
    if(QString("SWGHudsonmodelHudsonMasterComputer_monitorData").compare(type) == 0) {
      return new SWGHudsonmodelHudsonMasterComputer_monitorData();
    }
    if(QString("SWGHudsonmodelHudsonMasterComputerexecutors").compare(type) == 0) {
      return new SWGHudsonmodelHudsonMasterComputerexecutors();
    }
    if(QString("SWGHudsonmodelHudsonassignedLabels").compare(type) == 0) {
      return new SWGHudsonmodelHudsonassignedLabels();
    }
    if(QString("SWGHudsonmodelLabel1").compare(type) == 0) {
      return new SWGHudsonmodelLabel1();
    }
    if(QString("SWGHudsonmodelListView").compare(type) == 0) {
      return new SWGHudsonmodelListView();
    }
    if(QString("SWGHudsonmodelQueue").compare(type) == 0) {
      return new SWGHudsonmodelQueue();
    }
    if(QString("SWGHudsonmodelQueueBlockedItem").compare(type) == 0) {
      return new SWGHudsonmodelQueueBlockedItem();
    }
    if(QString("SWGHudsonmodelQueueLeftItem").compare(type) == 0) {
      return new SWGHudsonmodelQueueLeftItem();
    }
    if(QString("SWGHudsonmodelStringParameterDefinition").compare(type) == 0) {
      return new SWGHudsonmodelStringParameterDefinition();
    }
    if(QString("SWGHudsonmodelStringParameterValue").compare(type) == 0) {
      return new SWGHudsonmodelStringParameterValue();
    }
    if(QString("SWGHudsonnode_monitorsDiskSpaceMonitorDescriptorDiskSpace").compare(type) == 0) {
      return new SWGHudsonnode_monitorsDiskSpaceMonitorDescriptorDiskSpace();
    }
    if(QString("SWGHudsonnode_monitorsResponseTimeMonitorData").compare(type) == 0) {
      return new SWGHudsonnode_monitorsResponseTimeMonitorData();
    }
    if(QString("SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2").compare(type) == 0) {
      return new SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2();
    }
    if(QString("SWGHudsonscmEmptyChangeLogSet").compare(type) == 0) {
      return new SWGHudsonscmEmptyChangeLogSet();
    }
    if(QString("SWGHudsonscmNullSCM").compare(type) == 0) {
      return new SWGHudsonscmNullSCM();
    }
    if(QString("SWGHudsonsecuritycsrfDefaultCrumbIssuer").compare(type) == 0) {
      return new SWGHudsonsecuritycsrfDefaultCrumbIssuer();
    }
    if(QString("SWGHudsonutilClockDifference").compare(type) == 0) {
      return new SWGHudsonutilClockDifference();
    }
    if(QString("SWGIojenkinsblueoceanresthalLink").compare(type) == 0) {
      return new SWGIojenkinsblueoceanresthalLink();
    }
    if(QString("SWGIojenkinsblueoceanrestimplpipelineBranchImpl").compare(type) == 0) {
      return new SWGIojenkinsblueoceanrestimplpipelineBranchImpl();
    }
    if(QString("SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions").compare(type) == 0) {
      return new SWGIojenkinsblueoceanrestimplpipelineBranchImpl_permissions();
    }
    if(QString("SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1").compare(type) == 0) {
      return new SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1();
    }
    if(QString("SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links").compare(type) == 0) {
      return new SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1__links();
    }
    if(QString("SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map").compare(type) == 0) {
      return new SWGIojenkinsblueoceanserviceembeddedrestExtensionClassContainerImpl1_map();
    }
    if(QString("SWGIojenkinsblueoceanserviceembeddedrestExtensionClassImpl").compare(type) == 0) {
      return new SWGIojenkinsblueoceanserviceembeddedrestExtensionClassImpl();
    }
    if(QString("SWGIojenkinsblueoceanserviceembeddedrestExtensionClassImpl__links").compare(type) == 0) {
      return new SWGIojenkinsblueoceanserviceembeddedrestExtensionClassImpl__links();
    }
    if(QString("SWGIojenkinsblueoceanserviceembeddedrestPipelineFolderImpl").compare(type) == 0) {
      return new SWGIojenkinsblueoceanserviceembeddedrestPipelineFolderImpl();
    }
    if(QString("SWGIojenkinsblueoceanserviceembeddedrestPipelineImpl").compare(type) == 0) {
      return new SWGIojenkinsblueoceanserviceembeddedrestPipelineImpl();
    }
    if(QString("SWGJenkinsmodelUnlabeledLoadStatistics").compare(type) == 0) {
      return new SWGJenkinsmodelUnlabeledLoadStatistics();
    }
    if(QString("SWGSwaggyjenkinsOrganisation").compare(type) == 0) {
      return new SWGSwaggyjenkinsOrganisation();
    }
    if(QString("SWGSwaggyjenkinsPipeline").compare(type) == 0) {
      return new SWGSwaggyjenkinsPipeline();
    }
    if(QString("SWGSwaggyjenkinsPipeline_latestRun").compare(type) == 0) {
      return new SWGSwaggyjenkinsPipeline_latestRun();
    }
    if(QString("SWGSwaggyjenkinsPipeline_latestRunartifacts").compare(type) == 0) {
      return new SWGSwaggyjenkinsPipeline_latestRunartifacts();
    }
    if(QString("SWGSwaggyjenkinsUser").compare(type) == 0) {
      return new SWGSwaggyjenkinsUser();
    }
    
    return nullptr;
  }

  inline void* create(QString json, QString type) {
    void* val = create(type);
    if(val != nullptr) {
      SWGObject* obj = static_cast<SWGObject*>(val);
      return obj->fromJson(json);
    }
    if(type.startsWith("QString")) {
      return new QString();
    }
    return nullptr;
  }

}

#endif /* ModelFactory_H_ */
