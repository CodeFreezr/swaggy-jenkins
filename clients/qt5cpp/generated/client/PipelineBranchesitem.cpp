/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "PipelineBranchesitem.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

PipelineBranchesitem::PipelineBranchesitem(QString* json) {
    init();
    this->fromJson(*json);
}

PipelineBranchesitem::PipelineBranchesitem() {
    init();
}

PipelineBranchesitem::~PipelineBranchesitem() {
    this->cleanup();
}

void
PipelineBranchesitem::init() {
    display_name = new QString("");
    estimated_duration_in_millis = 0;
    name = new QString("");
    weather_score = 0;
    latest_run = new PipelineBranchesitemlatestRun();
    organization = new QString("");
    pull_request = new PipelineBranchesitempullRequest();
    total_number_of_pull_requests = 0;
    _class = new QString("");
}

void
PipelineBranchesitem::cleanup() {
    
    if(display_name != nullptr) {
        delete display_name;
    }


    if(name != nullptr) {
        delete name;
    }


    if(latest_run != nullptr) {
        delete latest_run;
    }

    if(organization != nullptr) {
        delete organization;
    }

    if(pull_request != nullptr) {
        delete pull_request;
    }


    if(_class != nullptr) {
        delete _class;
    }
}

PipelineBranchesitem*
PipelineBranchesitem::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
PipelineBranchesitem::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&display_name, pJson["displayName"], "QString", "QString");
    ::Swagger::setValue(&estimated_duration_in_millis, pJson["estimatedDurationInMillis"], "qint32", "");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&weather_score, pJson["weatherScore"], "qint32", "");
    ::Swagger::setValue(&latest_run, pJson["latestRun"], "PipelineBranchesitemlatestRun", "PipelineBranchesitemlatestRun");
    ::Swagger::setValue(&organization, pJson["organization"], "QString", "QString");
    ::Swagger::setValue(&pull_request, pJson["pullRequest"], "PipelineBranchesitempullRequest", "PipelineBranchesitempullRequest");
    ::Swagger::setValue(&total_number_of_pull_requests, pJson["totalNumberOfPullRequests"], "qint32", "");
    ::Swagger::setValue(&_class, pJson["_class"], "QString", "QString");
}

QString
PipelineBranchesitem::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
PipelineBranchesitem::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("displayName"), display_name, obj, QString("QString"));

    obj->insert("estimatedDurationInMillis", QJsonValue(estimated_duration_in_millis));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    obj->insert("weatherScore", QJsonValue(weather_score));

    toJsonValue(QString("latestRun"), latest_run, obj, QString("PipelineBranchesitemlatestRun"));

    toJsonValue(QString("organization"), organization, obj, QString("QString"));

    toJsonValue(QString("pullRequest"), pull_request, obj, QString("PipelineBranchesitempullRequest"));

    obj->insert("totalNumberOfPullRequests", QJsonValue(total_number_of_pull_requests));

    toJsonValue(QString("_class"), _class, obj, QString("QString"));

    return obj;
}

QString*
PipelineBranchesitem::getDisplayName() {
    return display_name;
}
void
PipelineBranchesitem::setDisplayName(QString* display_name) {
    this->display_name = display_name;
}

qint32
PipelineBranchesitem::getEstimatedDurationInMillis() {
    return estimated_duration_in_millis;
}
void
PipelineBranchesitem::setEstimatedDurationInMillis(qint32 estimated_duration_in_millis) {
    this->estimated_duration_in_millis = estimated_duration_in_millis;
}

QString*
PipelineBranchesitem::getName() {
    return name;
}
void
PipelineBranchesitem::setName(QString* name) {
    this->name = name;
}

qint32
PipelineBranchesitem::getWeatherScore() {
    return weather_score;
}
void
PipelineBranchesitem::setWeatherScore(qint32 weather_score) {
    this->weather_score = weather_score;
}

PipelineBranchesitemlatestRun*
PipelineBranchesitem::getLatestRun() {
    return latest_run;
}
void
PipelineBranchesitem::setLatestRun(PipelineBranchesitemlatestRun* latest_run) {
    this->latest_run = latest_run;
}

QString*
PipelineBranchesitem::getOrganization() {
    return organization;
}
void
PipelineBranchesitem::setOrganization(QString* organization) {
    this->organization = organization;
}

PipelineBranchesitempullRequest*
PipelineBranchesitem::getPullRequest() {
    return pull_request;
}
void
PipelineBranchesitem::setPullRequest(PipelineBranchesitempullRequest* pull_request) {
    this->pull_request = pull_request;
}

qint32
PipelineBranchesitem::getTotalNumberOfPullRequests() {
    return total_number_of_pull_requests;
}
void
PipelineBranchesitem::setTotalNumberOfPullRequests(qint32 total_number_of_pull_requests) {
    this->total_number_of_pull_requests = total_number_of_pull_requests;
}

QString*
PipelineBranchesitem::getClass() {
    return _class;
}
void
PipelineBranchesitem::setClass(QString* _class) {
    this->_class = _class;
}


}

