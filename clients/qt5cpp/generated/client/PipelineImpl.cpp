/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "PipelineImpl.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

PipelineImpl::PipelineImpl(QString* json) {
    init();
    this->fromJson(*json);
}

PipelineImpl::PipelineImpl() {
    init();
}

PipelineImpl::~PipelineImpl() {
    this->cleanup();
}

void
PipelineImpl::init() {
    _class = new QString("");
    display_name = new QString("");
    estimated_duration_in_millis = 0;
    full_name = new QString("");
    latest_run = new QString("");
    name = new QString("");
    organization = new QString("");
    weather_score = 0;
    _links = new PipelineImpllinks();
}

void
PipelineImpl::cleanup() {
    
    if(_class != nullptr) {
        delete _class;
    }

    if(display_name != nullptr) {
        delete display_name;
    }


    if(full_name != nullptr) {
        delete full_name;
    }

    if(latest_run != nullptr) {
        delete latest_run;
    }

    if(name != nullptr) {
        delete name;
    }

    if(organization != nullptr) {
        delete organization;
    }


    if(_links != nullptr) {
        delete _links;
    }
}

PipelineImpl*
PipelineImpl::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
PipelineImpl::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&_class, pJson["_class"], "QString", "QString");
    ::Swagger::setValue(&display_name, pJson["displayName"], "QString", "QString");
    ::Swagger::setValue(&estimated_duration_in_millis, pJson["estimatedDurationInMillis"], "qint32", "");
    ::Swagger::setValue(&full_name, pJson["fullName"], "QString", "QString");
    ::Swagger::setValue(&latest_run, pJson["latestRun"], "QString", "QString");
    ::Swagger::setValue(&name, pJson["name"], "QString", "QString");
    ::Swagger::setValue(&organization, pJson["organization"], "QString", "QString");
    ::Swagger::setValue(&weather_score, pJson["weatherScore"], "qint32", "");
    ::Swagger::setValue(&_links, pJson["_links"], "PipelineImpllinks", "PipelineImpllinks");
}

QString
PipelineImpl::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
PipelineImpl::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("_class"), _class, obj, QString("QString"));

    toJsonValue(QString("displayName"), display_name, obj, QString("QString"));

    obj->insert("estimatedDurationInMillis", QJsonValue(estimated_duration_in_millis));

    toJsonValue(QString("fullName"), full_name, obj, QString("QString"));

    toJsonValue(QString("latestRun"), latest_run, obj, QString("QString"));

    toJsonValue(QString("name"), name, obj, QString("QString"));

    toJsonValue(QString("organization"), organization, obj, QString("QString"));

    obj->insert("weatherScore", QJsonValue(weather_score));

    toJsonValue(QString("_links"), _links, obj, QString("PipelineImpllinks"));

    return obj;
}

QString*
PipelineImpl::getClass() {
    return _class;
}
void
PipelineImpl::setClass(QString* _class) {
    this->_class = _class;
}

QString*
PipelineImpl::getDisplayName() {
    return display_name;
}
void
PipelineImpl::setDisplayName(QString* display_name) {
    this->display_name = display_name;
}

qint32
PipelineImpl::getEstimatedDurationInMillis() {
    return estimated_duration_in_millis;
}
void
PipelineImpl::setEstimatedDurationInMillis(qint32 estimated_duration_in_millis) {
    this->estimated_duration_in_millis = estimated_duration_in_millis;
}

QString*
PipelineImpl::getFullName() {
    return full_name;
}
void
PipelineImpl::setFullName(QString* full_name) {
    this->full_name = full_name;
}

QString*
PipelineImpl::getLatestRun() {
    return latest_run;
}
void
PipelineImpl::setLatestRun(QString* latest_run) {
    this->latest_run = latest_run;
}

QString*
PipelineImpl::getName() {
    return name;
}
void
PipelineImpl::setName(QString* name) {
    this->name = name;
}

QString*
PipelineImpl::getOrganization() {
    return organization;
}
void
PipelineImpl::setOrganization(QString* organization) {
    this->organization = organization;
}

qint32
PipelineImpl::getWeatherScore() {
    return weather_score;
}
void
PipelineImpl::setWeatherScore(qint32 weather_score) {
    this->weather_score = weather_score;
}

PipelineImpllinks*
PipelineImpl::getLinks() {
    return _links;
}
void
PipelineImpl::setLinks(PipelineImpllinks* _links) {
    this->_links = _links;
}


}

