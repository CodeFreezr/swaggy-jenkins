/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "FreeStyleProjecthealthReport.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

FreeStyleProjecthealthReport::FreeStyleProjecthealthReport(QString* json) {
    init();
    this->fromJson(*json);
}

FreeStyleProjecthealthReport::FreeStyleProjecthealthReport() {
    init();
}

FreeStyleProjecthealthReport::~FreeStyleProjecthealthReport() {
    this->cleanup();
}

void
FreeStyleProjecthealthReport::init() {
    description = new QString("");
    icon_class_name = new QString("");
    icon_url = new QString("");
    score = 0;
    _class = new QString("");
}

void
FreeStyleProjecthealthReport::cleanup() {
    
    if(description != nullptr) {
        delete description;
    }

    if(icon_class_name != nullptr) {
        delete icon_class_name;
    }

    if(icon_url != nullptr) {
        delete icon_url;
    }


    if(_class != nullptr) {
        delete _class;
    }
}

FreeStyleProjecthealthReport*
FreeStyleProjecthealthReport::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
FreeStyleProjecthealthReport::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&description, pJson["description"], "QString", "QString");
    ::Swagger::setValue(&icon_class_name, pJson["iconClassName"], "QString", "QString");
    ::Swagger::setValue(&icon_url, pJson["iconUrl"], "QString", "QString");
    ::Swagger::setValue(&score, pJson["score"], "qint32", "");
    ::Swagger::setValue(&_class, pJson["_class"], "QString", "QString");
}

QString
FreeStyleProjecthealthReport::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
FreeStyleProjecthealthReport::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("description"), description, obj, QString("QString"));

    toJsonValue(QString("iconClassName"), icon_class_name, obj, QString("QString"));

    toJsonValue(QString("iconUrl"), icon_url, obj, QString("QString"));

    obj->insert("score", QJsonValue(score));

    toJsonValue(QString("_class"), _class, obj, QString("QString"));

    return obj;
}

QString*
FreeStyleProjecthealthReport::getDescription() {
    return description;
}
void
FreeStyleProjecthealthReport::setDescription(QString* description) {
    this->description = description;
}

QString*
FreeStyleProjecthealthReport::getIconClassName() {
    return icon_class_name;
}
void
FreeStyleProjecthealthReport::setIconClassName(QString* icon_class_name) {
    this->icon_class_name = icon_class_name;
}

QString*
FreeStyleProjecthealthReport::getIconUrl() {
    return icon_url;
}
void
FreeStyleProjecthealthReport::setIconUrl(QString* icon_url) {
    this->icon_url = icon_url;
}

qint32
FreeStyleProjecthealthReport::getScore() {
    return score;
}
void
FreeStyleProjecthealthReport::setScore(qint32 score) {
    this->score = score;
}

QString*
FreeStyleProjecthealthReport::getClass() {
    return _class;
}
void
FreeStyleProjecthealthReport::setClass(QString* _class) {
    this->_class = _class;
}


}

