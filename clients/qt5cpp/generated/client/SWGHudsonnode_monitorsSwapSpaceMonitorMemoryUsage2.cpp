/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2(QString* json) {
    init();
    this->fromJson(*json);
}

SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2() {
    init();
}

SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::~SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2() {
    this->cleanup();
}

void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::init() {
    _class = new QString("");
    available_physical_memory = 0;
    available_swap_space = 0;
    total_physical_memory = 0;
    total_swap_space = 0;
}

void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::cleanup() {
    
    if(_class != nullptr) {
        delete _class;
    }




}

SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2*
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&_class, pJson["_class"], "QString", "QString");
    ::Swagger::setValue(&available_physical_memory, pJson["availablePhysicalMemory"], "qint32", "");
    ::Swagger::setValue(&available_swap_space, pJson["availableSwapSpace"], "qint32", "");
    ::Swagger::setValue(&total_physical_memory, pJson["totalPhysicalMemory"], "qint32", "");
    ::Swagger::setValue(&total_swap_space, pJson["totalSwapSpace"], "qint32", "");
}

QString
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("_class"), _class, obj, QString("QString"));

    obj->insert("availablePhysicalMemory", QJsonValue(available_physical_memory));

    obj->insert("availableSwapSpace", QJsonValue(available_swap_space));

    obj->insert("totalPhysicalMemory", QJsonValue(total_physical_memory));

    obj->insert("totalSwapSpace", QJsonValue(total_swap_space));

    return obj;
}

QString*
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::getClass() {
    return _class;
}
void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::setClass(QString* _class) {
    this->_class = _class;
}

qint32
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::getAvailablePhysicalMemory() {
    return available_physical_memory;
}
void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::setAvailablePhysicalMemory(qint32 available_physical_memory) {
    this->available_physical_memory = available_physical_memory;
}

qint32
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::getAvailableSwapSpace() {
    return available_swap_space;
}
void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::setAvailableSwapSpace(qint32 available_swap_space) {
    this->available_swap_space = available_swap_space;
}

qint32
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::getTotalPhysicalMemory() {
    return total_physical_memory;
}
void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::setTotalPhysicalMemory(qint32 total_physical_memory) {
    this->total_physical_memory = total_physical_memory;
}

qint32
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::getTotalSwapSpace() {
    return total_swap_space;
}
void
SWGHudsonnode_monitorsSwapSpaceMonitorMemoryUsage2::setTotalSwapSpace(qint32 total_swap_space) {
    this->total_swap_space = total_swap_space;
}


}

