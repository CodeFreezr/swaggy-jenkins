/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


#include "GenericResource.h"

#include "SWGHelpers.h"

#include <QJsonDocument>
#include <QJsonArray>
#include <QObject>
#include <QDebug>

namespace Swagger {

GenericResource::GenericResource(QString* json) {
    init();
    this->fromJson(*json);
}

GenericResource::GenericResource() {
    init();
}

GenericResource::~GenericResource() {
    this->cleanup();
}

void
GenericResource::init() {
    _class = new QString("");
    display_name = new QString("");
    duration_in_millis = 0;
    id = new QString("");
    result = new QString("");
    start_time = new QString("");
}

void
GenericResource::cleanup() {
    
    if(_class != nullptr) {
        delete _class;
    }

    if(display_name != nullptr) {
        delete display_name;
    }


    if(id != nullptr) {
        delete id;
    }

    if(result != nullptr) {
        delete result;
    }

    if(start_time != nullptr) {
        delete start_time;
    }
}

GenericResource*
GenericResource::fromJson(QString &json) {
    QByteArray array (json.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
    return this;
}

void
GenericResource::fromJsonObject(QJsonObject &pJson) {
    ::Swagger::setValue(&_class, pJson["_class"], "QString", "QString");
    ::Swagger::setValue(&display_name, pJson["displayName"], "QString", "QString");
    ::Swagger::setValue(&duration_in_millis, pJson["durationInMillis"], "qint32", "");
    ::Swagger::setValue(&id, pJson["id"], "QString", "QString");
    ::Swagger::setValue(&result, pJson["result"], "QString", "QString");
    ::Swagger::setValue(&start_time, pJson["startTime"], "QString", "QString");
}

QString
GenericResource::asJson ()
{
    QJsonObject* obj = this->asJsonObject();
    
    QJsonDocument doc(*obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject*
GenericResource::asJsonObject() {
    QJsonObject* obj = new QJsonObject();
    
    toJsonValue(QString("_class"), _class, obj, QString("QString"));

    toJsonValue(QString("displayName"), display_name, obj, QString("QString"));

    obj->insert("durationInMillis", QJsonValue(duration_in_millis));

    toJsonValue(QString("id"), id, obj, QString("QString"));

    toJsonValue(QString("result"), result, obj, QString("QString"));

    toJsonValue(QString("startTime"), start_time, obj, QString("QString"));

    return obj;
}

QString*
GenericResource::getClass() {
    return _class;
}
void
GenericResource::setClass(QString* _class) {
    this->_class = _class;
}

QString*
GenericResource::getDisplayName() {
    return display_name;
}
void
GenericResource::setDisplayName(QString* display_name) {
    this->display_name = display_name;
}

qint32
GenericResource::getDurationInMillis() {
    return duration_in_millis;
}
void
GenericResource::setDurationInMillis(qint32 duration_in_millis) {
    this->duration_in_millis = duration_in_millis;
}

QString*
GenericResource::getId() {
    return id;
}
void
GenericResource::setId(QString* id) {
    this->id = id;
}

QString*
GenericResource::getResult() {
    return result;
}
void
GenericResource::setResult(QString* result) {
    this->result = result;
}

QString*
GenericResource::getStartTime() {
    return start_time;
}
void
GenericResource::setStartTime(QString* start_time) {
    this->start_time = start_time;
}


}

