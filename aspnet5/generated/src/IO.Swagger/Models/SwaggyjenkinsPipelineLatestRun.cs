/*
 * Swaggy Jenkins
 *
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{

    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class SwaggyjenkinsPipelineLatestRun :  IEquatable<SwaggyjenkinsPipelineLatestRun>
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="SwaggyjenkinsPipelineLatestRun" /> class.
        /// </summary>
        /// <param name="Artifacts">Artifacts.</param>
        /// <param name="DurationInMillis">DurationInMillis.</param>
        /// <param name="EstimatedDurationInMillis">EstimatedDurationInMillis.</param>
        /// <param name="EnQueueTime">EnQueueTime.</param>
        /// <param name="EndTime">EndTime.</param>
        /// <param name="Id">Id.</param>
        /// <param name="Organization">Organization.</param>
        /// <param name="Pipeline">Pipeline.</param>
        /// <param name="Result">Result.</param>
        /// <param name="RunSummary">RunSummary.</param>
        /// <param name="StartTime">StartTime.</param>
        /// <param name="State">State.</param>
        /// <param name="Type">Type.</param>
        /// <param name="CommitId">CommitId.</param>
        /// <param name="Class">Class.</param>
        public SwaggyjenkinsPipelineLatestRun(List<SwaggyjenkinsPipelineLatestRunartifacts> Artifacts = default(List<SwaggyjenkinsPipelineLatestRunartifacts>), int? DurationInMillis = default(int?), int? EstimatedDurationInMillis = default(int?), string EnQueueTime = default(string), string EndTime = default(string), string Id = default(string), string Organization = default(string), string Pipeline = default(string), string Result = default(string), string RunSummary = default(string), string StartTime = default(string), string State = default(string), string Type = default(string), string CommitId = default(string), string Class = default(string))
        {
            this.Artifacts = Artifacts;
            this.DurationInMillis = DurationInMillis;
            this.EstimatedDurationInMillis = EstimatedDurationInMillis;
            this.EnQueueTime = EnQueueTime;
            this.EndTime = EndTime;
            this.Id = Id;
            this.Organization = Organization;
            this.Pipeline = Pipeline;
            this.Result = Result;
            this.RunSummary = RunSummary;
            this.StartTime = StartTime;
            this.State = State;
            this.Type = Type;
            this.CommitId = CommitId;
            this.Class = Class;
            
        }

        /// <summary>
        /// Gets or Sets Artifacts
        /// </summary>
        [DataMember(Name="artifacts")]
        public List<SwaggyjenkinsPipelineLatestRunartifacts> Artifacts { get; set; }
        /// <summary>
        /// Gets or Sets DurationInMillis
        /// </summary>
        [DataMember(Name="durationInMillis")]
        public int? DurationInMillis { get; set; }
        /// <summary>
        /// Gets or Sets EstimatedDurationInMillis
        /// </summary>
        [DataMember(Name="estimatedDurationInMillis")]
        public int? EstimatedDurationInMillis { get; set; }
        /// <summary>
        /// Gets or Sets EnQueueTime
        /// </summary>
        [DataMember(Name="enQueueTime")]
        public string EnQueueTime { get; set; }
        /// <summary>
        /// Gets or Sets EndTime
        /// </summary>
        [DataMember(Name="endTime")]
        public string EndTime { get; set; }
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public string Id { get; set; }
        /// <summary>
        /// Gets or Sets Organization
        /// </summary>
        [DataMember(Name="organization")]
        public string Organization { get; set; }
        /// <summary>
        /// Gets or Sets Pipeline
        /// </summary>
        [DataMember(Name="pipeline")]
        public string Pipeline { get; set; }
        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name="result")]
        public string Result { get; set; }
        /// <summary>
        /// Gets or Sets RunSummary
        /// </summary>
        [DataMember(Name="runSummary")]
        public string RunSummary { get; set; }
        /// <summary>
        /// Gets or Sets StartTime
        /// </summary>
        [DataMember(Name="startTime")]
        public string StartTime { get; set; }
        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state")]
        public string State { get; set; }
        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type")]
        public string Type { get; set; }
        /// <summary>
        /// Gets or Sets CommitId
        /// </summary>
        [DataMember(Name="commitId")]
        public string CommitId { get; set; }
        /// <summary>
        /// Gets or Sets Class
        /// </summary>
        [DataMember(Name="_class")]
        public string Class { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class SwaggyjenkinsPipelineLatestRun {\n");
            sb.Append("  Artifacts: ").Append(Artifacts).Append("\n");
            sb.Append("  DurationInMillis: ").Append(DurationInMillis).Append("\n");
            sb.Append("  EstimatedDurationInMillis: ").Append(EstimatedDurationInMillis).Append("\n");
            sb.Append("  EnQueueTime: ").Append(EnQueueTime).Append("\n");
            sb.Append("  EndTime: ").Append(EndTime).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Organization: ").Append(Organization).Append("\n");
            sb.Append("  Pipeline: ").Append(Pipeline).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  RunSummary: ").Append(RunSummary).Append("\n");
            sb.Append("  StartTime: ").Append(StartTime).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  CommitId: ").Append(CommitId).Append("\n");
            sb.Append("  Class: ").Append(Class).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((SwaggyjenkinsPipelineLatestRun)obj);
        }

        /// <summary>
        /// Returns true if SwaggyjenkinsPipelineLatestRun instances are equal
        /// </summary>
        /// <param name="other">Instance of SwaggyjenkinsPipelineLatestRun to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SwaggyjenkinsPipelineLatestRun other)
        {

            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    this.Artifacts == other.Artifacts ||
                    this.Artifacts != null &&
                    this.Artifacts.SequenceEqual(other.Artifacts)
                ) && 
                (
                    this.DurationInMillis == other.DurationInMillis ||
                    this.DurationInMillis != null &&
                    this.DurationInMillis.Equals(other.DurationInMillis)
                ) && 
                (
                    this.EstimatedDurationInMillis == other.EstimatedDurationInMillis ||
                    this.EstimatedDurationInMillis != null &&
                    this.EstimatedDurationInMillis.Equals(other.EstimatedDurationInMillis)
                ) && 
                (
                    this.EnQueueTime == other.EnQueueTime ||
                    this.EnQueueTime != null &&
                    this.EnQueueTime.Equals(other.EnQueueTime)
                ) && 
                (
                    this.EndTime == other.EndTime ||
                    this.EndTime != null &&
                    this.EndTime.Equals(other.EndTime)
                ) && 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Organization == other.Organization ||
                    this.Organization != null &&
                    this.Organization.Equals(other.Organization)
                ) && 
                (
                    this.Pipeline == other.Pipeline ||
                    this.Pipeline != null &&
                    this.Pipeline.Equals(other.Pipeline)
                ) && 
                (
                    this.Result == other.Result ||
                    this.Result != null &&
                    this.Result.Equals(other.Result)
                ) && 
                (
                    this.RunSummary == other.RunSummary ||
                    this.RunSummary != null &&
                    this.RunSummary.Equals(other.RunSummary)
                ) && 
                (
                    this.StartTime == other.StartTime ||
                    this.StartTime != null &&
                    this.StartTime.Equals(other.StartTime)
                ) && 
                (
                    this.State == other.State ||
                    this.State != null &&
                    this.State.Equals(other.State)
                ) && 
                (
                    this.Type == other.Type ||
                    this.Type != null &&
                    this.Type.Equals(other.Type)
                ) && 
                (
                    this.CommitId == other.CommitId ||
                    this.CommitId != null &&
                    this.CommitId.Equals(other.CommitId)
                ) && 
                (
                    this.Class == other.Class ||
                    this.Class != null &&
                    this.Class.Equals(other.Class)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                    if (this.Artifacts != null)
                    hash = hash * 59 + this.Artifacts.GetHashCode();
                    if (this.DurationInMillis != null)
                    hash = hash * 59 + this.DurationInMillis.GetHashCode();
                    if (this.EstimatedDurationInMillis != null)
                    hash = hash * 59 + this.EstimatedDurationInMillis.GetHashCode();
                    if (this.EnQueueTime != null)
                    hash = hash * 59 + this.EnQueueTime.GetHashCode();
                    if (this.EndTime != null)
                    hash = hash * 59 + this.EndTime.GetHashCode();
                    if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                    if (this.Organization != null)
                    hash = hash * 59 + this.Organization.GetHashCode();
                    if (this.Pipeline != null)
                    hash = hash * 59 + this.Pipeline.GetHashCode();
                    if (this.Result != null)
                    hash = hash * 59 + this.Result.GetHashCode();
                    if (this.RunSummary != null)
                    hash = hash * 59 + this.RunSummary.GetHashCode();
                    if (this.StartTime != null)
                    hash = hash * 59 + this.StartTime.GetHashCode();
                    if (this.State != null)
                    hash = hash * 59 + this.State.GetHashCode();
                    if (this.Type != null)
                    hash = hash * 59 + this.Type.GetHashCode();
                    if (this.CommitId != null)
                    hash = hash * 59 + this.CommitId.GetHashCode();
                    if (this.Class != null)
                    hash = hash * 59 + this.Class.GetHashCode();
                return hash;
            }
        }

        #region Operators

        public static bool operator ==(SwaggyjenkinsPipelineLatestRun left, SwaggyjenkinsPipelineLatestRun right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(SwaggyjenkinsPipelineLatestRun left, SwaggyjenkinsPipelineLatestRun right)
        {
            return !Equals(left, right);
        }

        #endregion Operators

    }
}
