/*
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * SwagHudsonmodelCauseAction
 */
public class SwagHudsonmodelCauseAction implements Swagger.MappedProperties {
    /**
     * Get propertyClass
     * @return propertyClass
     */
    public String propertyClass { get; set; }

    /**
     * Get causes
     * @return causes
     */
    public List<SwagHudsonmodelCauseUserIdCause> causes { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        '_class' => 'propertyClass'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagHudsonmodelCauseAction() {
        causes = new List<SwagHudsonmodelCauseUserIdCause>();
    }

    public static SwagHudsonmodelCauseAction getExample() {
        SwagHudsonmodelCauseAction hudsonmodelCauseAction = new SwagHudsonmodelCauseAction();
        hudsonmodelCauseAction.propertyClass = 'aeiou';
        hudsonmodelCauseAction.causes = new List<SwagHudsonmodelCauseUserIdCause>{SwagHudsonmodelCauseUserIdCause.getExample()};
        return hudsonmodelCauseAction;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagHudsonmodelCauseAction) {
            SwagHudsonmodelCauseAction hudsonmodelCauseAction = (SwagHudsonmodelCauseAction) obj;
            return this.propertyClass == hudsonmodelCauseAction.propertyClass
                && this.causes == hudsonmodelCauseAction.causes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (propertyClass == null ? 0 : System.hashCode(propertyClass));
        hashCode = (17 * hashCode) + (causes == null ? 0 : System.hashCode(causes));
        return hashCode;
    }
}

