/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * HudsonmodelFreeStyleProject.h
 *
 * 
 */

#ifndef HudsonmodelFreeStyleProject_H_
#define HudsonmodelFreeStyleProject_H_


#include "ModelBase.h"

#include "HudsonmodelFreeStyleProjecthealthReport.h"
#include "HudsonscmNullSCM.h"
#include <cpprest/details/basic_types.h>
#include "HudsonmodelFreeStyleBuild.h"
#include <vector>
#include "HudsonmodelFreeStyleProjectactions.h"

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  HudsonmodelFreeStyleProject
    : public ModelBase
{
public:
    HudsonmodelFreeStyleProject();
    virtual ~HudsonmodelFreeStyleProject();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// HudsonmodelFreeStyleProject members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClass() const;
    void setClass(utility::string_t value);
    bool _classIsSet() const;
    void unset_class();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getUrl() const;
    void setUrl(utility::string_t value);
    bool urlIsSet() const;
    void unsetUrl();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getColor() const;
    void setColor(utility::string_t value);
    bool colorIsSet() const;
    void unsetColor();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<HudsonmodelFreeStyleProjectactions>>& getActions();
    bool actionsIsSet() const;
    void unsetActions();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDescription() const;
    void setDescription(utility::string_t value);
    bool descriptionIsSet() const;
    void unsetDescription();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayName() const;
    void setDisplayName(utility::string_t value);
    bool displayNameIsSet() const;
    void unsetDisplayName();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayNameOrNull() const;
    void setDisplayNameOrNull(utility::string_t value);
    bool displayNameOrNullIsSet() const;
    void unsetDisplayNameOrNull();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFullDisplayName() const;
    void setFullDisplayName(utility::string_t value);
    bool fullDisplayNameIsSet() const;
    void unsetFullDisplayName();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getFullName() const;
    void setFullName(utility::string_t value);
    bool fullNameIsSet() const;
    void unsetFullName();
    /// <summary>
    /// 
    /// </summary>
    bool getBuildable() const;
    void setBuildable(bool value);
    bool buildableIsSet() const;
    void unsetBuildable();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<HudsonmodelFreeStyleBuild>>& getBuilds();
    bool buildsIsSet() const;
    void unsetBuilds();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<HudsonmodelFreeStyleBuild> getFirstBuild() const;
    void setFirstBuild(std::shared_ptr<HudsonmodelFreeStyleBuild> value);
    bool firstBuildIsSet() const;
    void unsetFirstBuild();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<HudsonmodelFreeStyleProjecthealthReport>>& getHealthReport();
    bool healthReportIsSet() const;
    void unsetHealthReport();
    /// <summary>
    /// 
    /// </summary>
    bool getInQueue() const;
    void setInQueue(bool value);
    bool inQueueIsSet() const;
    void unsetInQueue();
    /// <summary>
    /// 
    /// </summary>
    bool getKeepDependencies() const;
    void setKeepDependencies(bool value);
    bool keepDependenciesIsSet() const;
    void unsetKeepDependencies();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<HudsonmodelFreeStyleBuild> getLastBuild() const;
    void setLastBuild(std::shared_ptr<HudsonmodelFreeStyleBuild> value);
    bool lastBuildIsSet() const;
    void unsetLastBuild();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<HudsonmodelFreeStyleBuild> getLastCompletedBuild() const;
    void setLastCompletedBuild(std::shared_ptr<HudsonmodelFreeStyleBuild> value);
    bool lastCompletedBuildIsSet() const;
    void unsetLastCompletedBuild();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLastFailedBuild() const;
    void setLastFailedBuild(utility::string_t value);
    bool lastFailedBuildIsSet() const;
    void unsetLastFailedBuild();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<HudsonmodelFreeStyleBuild> getLastStableBuild() const;
    void setLastStableBuild(std::shared_ptr<HudsonmodelFreeStyleBuild> value);
    bool lastStableBuildIsSet() const;
    void unsetLastStableBuild();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<HudsonmodelFreeStyleBuild> getLastSuccessfulBuild() const;
    void setLastSuccessfulBuild(std::shared_ptr<HudsonmodelFreeStyleBuild> value);
    bool lastSuccessfulBuildIsSet() const;
    void unsetLastSuccessfulBuild();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLastUnstableBuild() const;
    void setLastUnstableBuild(utility::string_t value);
    bool lastUnstableBuildIsSet() const;
    void unsetLastUnstableBuild();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLastUnsuccessfulBuild() const;
    void setLastUnsuccessfulBuild(utility::string_t value);
    bool lastUnsuccessfulBuildIsSet() const;
    void unsetLastUnsuccessfulBuild();
    /// <summary>
    /// 
    /// </summary>
    int32_t getNextBuildNumber() const;
    void setNextBuildNumber(int32_t value);
    bool nextBuildNumberIsSet() const;
    void unsetNextBuildNumber();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getQueueItem() const;
    void setQueueItem(utility::string_t value);
    bool queueItemIsSet() const;
    void unsetQueueItem();
    /// <summary>
    /// 
    /// </summary>
    bool getConcurrentBuild() const;
    void setConcurrentBuild(bool value);
    bool concurrentBuildIsSet() const;
    void unsetConcurrentBuild();
    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<HudsonscmNullSCM> getScm() const;
    void setScm(std::shared_ptr<HudsonscmNullSCM> value);
    bool scmIsSet() const;
    void unsetScm();

protected:
    utility::string_t m__class;
    bool m__classIsSet;
utility::string_t m_Name;
    bool m_NameIsSet;
utility::string_t m_Url;
    bool m_UrlIsSet;
utility::string_t m_Color;
    bool m_ColorIsSet;
std::vector<std::shared_ptr<HudsonmodelFreeStyleProjectactions>> m_Actions;
    bool m_ActionsIsSet;
utility::string_t m_Description;
    bool m_DescriptionIsSet;
utility::string_t m_DisplayName;
    bool m_DisplayNameIsSet;
utility::string_t m_DisplayNameOrNull;
    bool m_DisplayNameOrNullIsSet;
utility::string_t m_FullDisplayName;
    bool m_FullDisplayNameIsSet;
utility::string_t m_FullName;
    bool m_FullNameIsSet;
bool m_Buildable;
    bool m_BuildableIsSet;
std::vector<std::shared_ptr<HudsonmodelFreeStyleBuild>> m_Builds;
    bool m_BuildsIsSet;
std::shared_ptr<HudsonmodelFreeStyleBuild> m_FirstBuild;
    bool m_FirstBuildIsSet;
std::vector<std::shared_ptr<HudsonmodelFreeStyleProjecthealthReport>> m_HealthReport;
    bool m_HealthReportIsSet;
bool m_InQueue;
    bool m_InQueueIsSet;
bool m_KeepDependencies;
    bool m_KeepDependenciesIsSet;
std::shared_ptr<HudsonmodelFreeStyleBuild> m_LastBuild;
    bool m_LastBuildIsSet;
std::shared_ptr<HudsonmodelFreeStyleBuild> m_LastCompletedBuild;
    bool m_LastCompletedBuildIsSet;
utility::string_t m_LastFailedBuild;
    bool m_LastFailedBuildIsSet;
std::shared_ptr<HudsonmodelFreeStyleBuild> m_LastStableBuild;
    bool m_LastStableBuildIsSet;
std::shared_ptr<HudsonmodelFreeStyleBuild> m_LastSuccessfulBuild;
    bool m_LastSuccessfulBuildIsSet;
utility::string_t m_LastUnstableBuild;
    bool m_LastUnstableBuildIsSet;
utility::string_t m_LastUnsuccessfulBuild;
    bool m_LastUnsuccessfulBuildIsSet;
int32_t m_NextBuildNumber;
    bool m_NextBuildNumberIsSet;
utility::string_t m_QueueItem;
    bool m_QueueItemIsSet;
bool m_ConcurrentBuild;
    bool m_ConcurrentBuildIsSet;
std::shared_ptr<HudsonscmNullSCM> m_Scm;
    bool m_ScmIsSet;
};

}
}
}
}

#endif /* HudsonmodelFreeStyleProject_H_ */
