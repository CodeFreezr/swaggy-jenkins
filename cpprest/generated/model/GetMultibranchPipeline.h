/**
 * Swaggy Jenkins
 * Jenkins API clients generated from Swagger / Open API specification
 *
 * OpenAPI spec version: 0.1.0
 * Contact: blah@cliffano.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/*
 * GetMultibranchPipeline.h
 *
 * 
 */

#ifndef GetMultibranchPipeline_H_
#define GetMultibranchPipeline_H_


#include "ModelBase.h"

#include <cpprest/details/basic_types.h>
#include <vector>

namespace io {
namespace swagger {
namespace client {
namespace model {

/// <summary>
/// 
/// </summary>
class  GetMultibranchPipeline
    : public ModelBase
{
public:
    GetMultibranchPipeline();
    virtual ~GetMultibranchPipeline();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    void fromJson(web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    void fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// GetMultibranchPipeline members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getDisplayName() const;
    void setDisplayName(utility::string_t value);
    bool displayNameIsSet() const;
    void unsetDisplayName();
    /// <summary>
    /// 
    /// </summary>
    int32_t getEstimatedDurationInMillis() const;
    void setEstimatedDurationInMillis(int32_t value);
    bool estimatedDurationInMillisIsSet() const;
    void unsetEstimatedDurationInMillis();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLatestRun() const;
    void setLatestRun(utility::string_t value);
    bool latestRunIsSet() const;
    void unsetLatestRun();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getName() const;
    void setName(utility::string_t value);
    bool nameIsSet() const;
    void unsetName();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getOrganization() const;
    void setOrganization(utility::string_t value);
    bool organizationIsSet() const;
    void unsetOrganization();
    /// <summary>
    /// 
    /// </summary>
    int32_t getWeatherScore() const;
    void setWeatherScore(int32_t value);
    bool weatherScoreIsSet() const;
    void unsetWeatherScore();
    /// <summary>
    /// 
    /// </summary>
    std::vector<utility::string_t>& getBranchNames();
    bool branchNamesIsSet() const;
    void unsetBranchNames();
    /// <summary>
    /// 
    /// </summary>
    int32_t getNumberOfFailingBranches() const;
    void setNumberOfFailingBranches(int32_t value);
    bool numberOfFailingBranchesIsSet() const;
    void unsetNumberOfFailingBranches();
    /// <summary>
    /// 
    /// </summary>
    int32_t getNumberOfFailingPullRequests() const;
    void setNumberOfFailingPullRequests(int32_t value);
    bool numberOfFailingPullRequestsIsSet() const;
    void unsetNumberOfFailingPullRequests();
    /// <summary>
    /// 
    /// </summary>
    int32_t getNumberOfSuccessfulBranches() const;
    void setNumberOfSuccessfulBranches(int32_t value);
    bool numberOfSuccessfulBranchesIsSet() const;
    void unsetNumberOfSuccessfulBranches();
    /// <summary>
    /// 
    /// </summary>
    int32_t getNumberOfSuccessfulPullRequests() const;
    void setNumberOfSuccessfulPullRequests(int32_t value);
    bool numberOfSuccessfulPullRequestsIsSet() const;
    void unsetNumberOfSuccessfulPullRequests();
    /// <summary>
    /// 
    /// </summary>
    int32_t getTotalNumberOfBranches() const;
    void setTotalNumberOfBranches(int32_t value);
    bool totalNumberOfBranchesIsSet() const;
    void unsetTotalNumberOfBranches();
    /// <summary>
    /// 
    /// </summary>
    int32_t getTotalNumberOfPullRequests() const;
    void setTotalNumberOfPullRequests(int32_t value);
    bool totalNumberOfPullRequestsIsSet() const;
    void unsetTotalNumberOfPullRequests();
    /// <summary>
    /// 
    /// </summary>
    utility::string_t getClass() const;
    void setClass(utility::string_t value);
    bool _classIsSet() const;
    void unset_class();

protected:
    utility::string_t m_DisplayName;
    bool m_DisplayNameIsSet;
int32_t m_EstimatedDurationInMillis;
    bool m_EstimatedDurationInMillisIsSet;
utility::string_t m_LatestRun;
    bool m_LatestRunIsSet;
utility::string_t m_Name;
    bool m_NameIsSet;
utility::string_t m_Organization;
    bool m_OrganizationIsSet;
int32_t m_WeatherScore;
    bool m_WeatherScoreIsSet;
std::vector<utility::string_t> m_BranchNames;
    bool m_BranchNamesIsSet;
int32_t m_NumberOfFailingBranches;
    bool m_NumberOfFailingBranchesIsSet;
int32_t m_NumberOfFailingPullRequests;
    bool m_NumberOfFailingPullRequestsIsSet;
int32_t m_NumberOfSuccessfulBranches;
    bool m_NumberOfSuccessfulBranchesIsSet;
int32_t m_NumberOfSuccessfulPullRequests;
    bool m_NumberOfSuccessfulPullRequestsIsSet;
int32_t m_TotalNumberOfBranches;
    bool m_TotalNumberOfBranchesIsSet;
int32_t m_TotalNumberOfPullRequests;
    bool m_TotalNumberOfPullRequestsIsSet;
utility::string_t m__class;
    bool m__classIsSet;
};

}
}
}
}

#endif /* GetMultibranchPipeline_H_ */
