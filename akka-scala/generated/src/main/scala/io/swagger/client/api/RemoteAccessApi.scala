/**
 * NOTE: This class is auto generated by the akka-scala (beta) swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * For any issue or feedback, please open a ticket via https://github.com/swagger-api/swagger-codegen/issues/new
 */
package io.swagger.client.api

import io.swagger.client.model.HudsonmodelComputerSet
import io.swagger.client.model.HudsonmodelFreeStyleBuild
import io.swagger.client.model.HudsonmodelFreeStyleProject
import io.swagger.client.model.HudsonmodelHudson
import io.swagger.client.model.HudsonmodelListView
import io.swagger.client.model.HudsonmodelQueue
import io.swagger.client.model.HudsonsecuritycsrfDefaultCrumbIssuer
import io.swagger.client.core._
import io.swagger.client.core.CollectionFormats._
import io.swagger.client.core.ApiKeyLocations._

object RemoteAccessApi {

  /**
   * Retrieve computer details
   * 
   * Expected answers:
   *   code 200 : HudsonmodelComputerSet (Successfully retrieved computer details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   */
  def getComputer(): ApiRequest[HudsonmodelComputerSet] =
    ApiRequest[HudsonmodelComputerSet](ApiMethods.GET, "http://localhost", "/computer/api/json?depth=1", "application/json")
      .withSuccessResponse[HudsonmodelComputerSet](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve CSRF protection token
   * 
   * Expected answers:
   *   code 200 : HudsonsecuritycsrfDefaultCrumbIssuer (Successfully retrieved CSRF protection token)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   */
  def getCrumb(): ApiRequest[HudsonsecuritycsrfDefaultCrumbIssuer] =
    ApiRequest[HudsonsecuritycsrfDefaultCrumbIssuer](ApiMethods.GET, "http://localhost", "/crumbIssuer/api/json", "application/json")
      .withSuccessResponse[HudsonsecuritycsrfDefaultCrumbIssuer](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve Jenkins details
   * 
   * Expected answers:
   *   code 200 : HudsonmodelHudson (Successfully retrieved Jenkins details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   */
  def getJenkins(): ApiRequest[HudsonmodelHudson] =
    ApiRequest[HudsonmodelHudson](ApiMethods.GET, "http://localhost", "/api/json", "application/json")
      .withSuccessResponse[HudsonmodelHudson](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve job details
   * 
   * Expected answers:
   *   code 200 : HudsonmodelFreeStyleProject (Successfully retrieved job details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   */
  def getJob(name: String): ApiRequest[HudsonmodelFreeStyleProject] =
    ApiRequest[HudsonmodelFreeStyleProject](ApiMethods.GET, "http://localhost", "/job/{name}/api/json", "application/json")
      .withPathParam("name", name)
      .withSuccessResponse[HudsonmodelFreeStyleProject](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve job configuration
   * 
   * Expected answers:
   *   code 200 : String (Successfully retrieved job configuration in config.xml format)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   */
  def getJobConfig(name: String): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "http://localhost", "/job/{name}/config.xml", "application/json")
      .withPathParam("name", name)
      .withSuccessResponse[String](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve job&#39;s last build details
   * 
   * Expected answers:
   *   code 200 : HudsonmodelFreeStyleBuild (Successfully retrieved job&#39;s last build details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   */
  def getJobLastBuild(name: String): ApiRequest[HudsonmodelFreeStyleBuild] =
    ApiRequest[HudsonmodelFreeStyleBuild](ApiMethods.GET, "http://localhost", "/job/{name}/lastBuild/api/json", "application/json")
      .withPathParam("name", name)
      .withSuccessResponse[HudsonmodelFreeStyleBuild](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve job&#39;s build progressive text output
   * 
   * Expected answers:
   *   code 200 :  (Successfully retrieved job&#39;s build progressive text output)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   * @param number Build number
   * @param start Starting point of progressive text output
   */
  def getJobProgressiveText(name: String, number: String, start: String): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.GET, "http://localhost", "/job/{name}/{number}/logText/progressiveText", "application/json")
      .withQueryParam("start", start)
      .withPathParam("name", name)
      .withPathParam("number", number)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve queue details
   * 
   * Expected answers:
   *   code 200 : HudsonmodelQueue (Successfully retrieved queue details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   */
  def getQueue(): ApiRequest[HudsonmodelQueue] =
    ApiRequest[HudsonmodelQueue](ApiMethods.GET, "http://localhost", "/queue/api/json", "application/json")
      .withSuccessResponse[HudsonmodelQueue](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve queued item details
   * 
   * Expected answers:
   *   code 200 : HudsonmodelQueue (Successfully retrieved queued item details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param number Queue number
   */
  def getQueueItem(number: String): ApiRequest[HudsonmodelQueue] =
    ApiRequest[HudsonmodelQueue](ApiMethods.GET, "http://localhost", "/queue/item/{number}/api/json", "application/json")
      .withPathParam("number", number)
      .withSuccessResponse[HudsonmodelQueue](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Retrieve view details
   * 
   * Expected answers:
   *   code 200 : HudsonmodelListView (Successfully retrieved view details)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (View cannot be found on Jenkins instance)
   * 
   * @param name Name of the view
   */
  def getView(name: String): ApiRequest[HudsonmodelListView] =
    ApiRequest[HudsonmodelListView](ApiMethods.GET, "http://localhost", "/view/{name}/api/json", "application/json")
      .withPathParam("name", name)
      .withSuccessResponse[HudsonmodelListView](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve view configuration
   * 
   * Expected answers:
   *   code 200 : String (Successfully retrieved view configuration in config.xml format)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (View cannot be found on Jenkins instance)
   * 
   * @param name Name of the view
   */
  def getViewConfig(name: String): ApiRequest[String] =
    ApiRequest[String](ApiMethods.GET, "http://localhost", "/view/{name}/config.xml", "application/json")
      .withPathParam("name", name)
      .withSuccessResponse[String](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Retrieve Jenkins headers
   * 
   * Expected answers:
   *   code 200 :  (Successfully retrieved Jenkins headers)
   *              Headers :
   *                x-jenkins - Jenkins version number
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   */
  def headJenkins(): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.HEAD, "http://localhost", "/api/json", "application/json")
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      
  object HeadJenkinsHeaders { 
    def xJenkins(r: ApiReturnWithHeaders) = r.getStringHeader("x-jenkins")
  }
  /**
   * Create a new job using job configuration, or copied from an existing job
   * 
   * Expected answers:
   *   code 200 :  (Successfully created a new job)
   *   code 400 : String (An error has occurred - error message is embedded inside the HTML response)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param name Name of the new job
   * @param from Existing job to copy from
   * @param mode Set to &#39;copy&#39; for copying an existing job
   * @param body Job configuration in config.xml format
   * @param jenkinsCrumb CSRF protection token
   * @param contentType Content type header application/xml
   */
  def postCreateItem(name: String, from: Option[String] = None, mode: Option[String] = None, body: Option[String] = None, jenkinsCrumb: Option[String] = None, contentType: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/createItem", "application/json")
      .withBody(body)
      .withQueryParam("name", name)
      .withQueryParam("from", from)
      .withQueryParam("mode", mode)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withHeaderParam("Content-Type", contentType)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[String](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Create a new view using view configuration
   * 
   * Expected answers:
   *   code 200 :  (Successfully created the view)
   *   code 400 : String (An error has occurred - error message is embedded inside the HTML response)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   * 
   * @param name Name of the new view
   * @param body View configuration in config.xml format
   * @param jenkinsCrumb CSRF protection token
   * @param contentType Content type header application/xml
   */
  def postCreateView(name: String, body: Option[String] = None, jenkinsCrumb: Option[String] = None, contentType: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/createView", "application/json")
      .withBody(body)
      .withQueryParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withHeaderParam("Content-Type", contentType)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[String](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
        /**
   * Build a job
   * 
   * Expected answers:
   *   code 200 :  (Successfully built the job (backward compatibility for older versions of Jenkins))
   *   code 201 :  (Successfully built the job)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   * @param json 
   * @param token 
   * @param jenkinsCrumb CSRF protection token
   */
  def postJobBuild(name: String, json: String, token: Option[String] = None, jenkinsCrumb: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/job/{name}/build", "application/json")
      .withQueryParam("json", json)
      .withQueryParam("token", token)
      .withPathParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](201)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Update job configuration
   * 
   * Expected answers:
   *   code 200 :  (Successfully retrieved job configuration in config.xml format)
   *   code 400 : String (An error has occurred - error message is embedded inside the HTML response)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   * @param body Job configuration in config.xml format
   * @param jenkinsCrumb CSRF protection token
   */
  def postJobConfig(name: String, body: String, jenkinsCrumb: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/job/{name}/config.xml", "application/json")
      .withBody(body)
      .withPathParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[String](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Delete a job
   * 
   * Expected answers:
   *   code 200 :  (Successfully deleted the job)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   * @param jenkinsCrumb CSRF protection token
   */
  def postJobDelete(name: String, jenkinsCrumb: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/job/{name}/doDelete", "application/json")
      .withPathParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Disable a job
   * 
   * Expected answers:
   *   code 200 :  (Successfully disabled the job)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   * @param jenkinsCrumb CSRF protection token
   */
  def postJobDisable(name: String, jenkinsCrumb: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/job/{name}/disable", "application/json")
      .withPathParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Enable a job
   * 
   * Expected answers:
   *   code 200 :  (Successfully enabled the job)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   * @param jenkinsCrumb CSRF protection token
   */
  def postJobEnable(name: String, jenkinsCrumb: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/job/{name}/enable", "application/json")
      .withPathParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Stop a job
   * 
   * Expected answers:
   *   code 200 :  (Successfully stopped the job)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (Job cannot be found on Jenkins instance)
   * 
   * @param name Name of the job
   * @param jenkinsCrumb CSRF protection token
   */
  def postJobLastBuildStop(name: String, jenkinsCrumb: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/job/{name}/lastBuild/stop", "application/json")
      .withPathParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
        /**
   * Update view configuration
   * 
   * Expected answers:
   *   code 200 :  (Successfully updated view configuration)
   *   code 400 : String (An error has occurred - error message is embedded inside the HTML response)
   *   code 401 :  (Authentication failed - incorrect username and/or password)
   *   code 403 :  (Jenkins requires authentication - please set username and password)
   *   code 404 :  (View cannot be found on Jenkins instance)
   * 
   * @param name Name of the view
   * @param body View configuration in config.xml format
   * @param jenkinsCrumb CSRF protection token
   */
  def postViewConfig(name: String, body: String, jenkinsCrumb: Option[String] = None): ApiRequest[Unit] =
    ApiRequest[Unit](ApiMethods.POST, "http://localhost", "/view/{name}/config.xml", "application/json")
      .withBody(body)
      .withPathParam("name", name)
      .withHeaderParam("Jenkins-Crumb", jenkinsCrumb)
      .withSuccessResponse[Unit](200)
      .withErrorResponse[String](400)
      .withErrorResponse[Unit](401)
      .withErrorResponse[Unit](403)
      .withErrorResponse[Unit](404)
      

}

